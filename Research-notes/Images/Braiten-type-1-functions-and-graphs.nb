(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    312859,       6012]
NotebookOptionsPosition[    309109,       5891]
NotebookOutlinePosition[    309756,       5913]
CellTagsIndexPosition[    309713,       5910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Braitenberg\[CloseCurlyQuote]s Type 1 vehicles analysis\
\>", "Title",
 CellChangeTimes->{{3.603114011743107*^9, 3.6031140503920717`*^9}},
 TextAlignment->Center],

Cell["\<\
This notebook contains definition and graphs for the dynamic differential  \
equations governing the motion of a Type 1 Braitenberg vehicle (both a and b \
variants), endowed with a single sensor either omni-directional or pointing \
forward and with a field of view of 180 degrees.
\
\>", "Text",
 CellChangeTimes->{{3.603114060617715*^9, 3.603114143697423*^9}, {
  3.60314162334564*^9, 3.603141659970516*^9}, {3.603544026600012*^9, 
  3.603544028471529*^9}},
 TextJustification->1.],

Cell[CellGroupData[{

Cell["\<\
Systems with Omndirectional sensors\
\>", "Section",
 CellChangeTimes->{{3.6031417475693007`*^9, 3.603141750040793*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603053585598901*^9, 3.603053586466035*^9}, {
   3.603070682158388*^9, 3.6030707826170683`*^9}, {3.603113597633651*^9, 
   3.603113600337843*^9}, 3.603113930199257*^9, 3.603114058945299*^9, {
   3.603141667042964*^9, 3.603141703307641*^9}}],

Cell["\<\
For a Type 1a system with a omndirectional sensor and the input decaying \
according the inverse square law, we have the following equation for the \
system as a whole:\
\>", "Text",
 CellChangeTimes->{{3.6031417719926453`*^9, 3.603141816512751*^9}, {
  3.603142709243162*^9, 3.603142711186634*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"braiten1aOmni", "(", "x_", ")"}], ":=", 
   FractionBox[
    RowBox[{"a", " ", "K", " ", "S"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"s", "-", "x"}], ")"}], "2"], "+", "1"}]]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.60314182670714*^9, 3.6031419489981337`*^9}}],

Cell["\<\
whose phase portrait is as follows:\
\>", "Text",
 CellChangeTimes->{{3.6031419562810097`*^9, 3.603141993409087*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "*", "K", "*", "S"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"s", "-", "x"}], ")"}], "^", "n"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         OverscriptBox["x", "."]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
      ",", 
      RowBox[{"-", "50"}], ",", "50", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Alpha]", ",", "1", ",", "\"\<alpha: Sensor efficiency\>\""}], "}"}],
       ",", "0", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"K", ",", "1", ",", "\"\<K: Input to Output Factor\>\""}], 
       "}"}], ",", "0", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "1", ",", "\"\<S: Source strength\>\""}], "}"}], ",",
       "1", ",", "10", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "2", ",", "\"\<n: Stimulus degradation\>\""}], "}"}],
       ",", "1", ",", "3", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6031422601066103`*^9, {3.6031424876404257`*^9, 3.603142555056177*^9}, 
   3.603143430860546*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{K$$ = 1., $CellContext`n$$ = 
    2, $CellContext`s$$ = -2.3999999999999986`, $CellContext`S$$ = 
    2.85, $CellContext`\[Alpha]$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`\[Alpha]$$], 1, "alpha: Sensor efficiency"}, 0, 1}, {{
       Hold[K$$], 1, "K: Input to Output Factor"}, 0, 1}, {{
       Hold[$CellContext`S$$], 1, "S: Source strength"}, 1, 10}, {{
       Hold[$CellContext`n$$], 2, "n: Stimulus degradation"}, 1, 3}}, 
    Typeset`size$$ = {360., {100., 103.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$49129$$ = 0, $CellContext`\[Alpha]$49130$$ = 0, 
    K$49131$$ = 0, $CellContext`S$49132$$ = 0, $CellContext`n$49133$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       K$$ = 1, $CellContext`n$$ = 2, $CellContext`s$$ = 0, $CellContext`S$$ = 
        1, $CellContext`\[Alpha]$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$49129$$, 0], 
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$49130$$, 0], 
        Hold[K$$, K$49131$$, 0], 
        Hold[$CellContext`S$$, $CellContext`S$49132$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$49133$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(($CellContext`\[Alpha]$$ K$$) $CellContext`S$$)/(
        1 + ($CellContext`s$$ - $CellContext`x)^$CellContext`n$$), \
{$CellContext`x, -10, 10}, PlotRange -> Full, AspectRatio -> 0.5, 
        AxesLabel -> {$CellContext`x, 
          OverDot[$CellContext`x, 1]}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`\[Alpha]$$, 1, 
          "alpha: Sensor efficiency"}, 0, 1, Appearance -> "Labeled"}, {{
         K$$, 1, "K: Input to Output Factor"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`S$$, 1, "S: Source strength"}, 1, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`n$$, 2, "n: Stimulus degradation"}, 1, 3, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{836., {126., 133.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.603142543570204*^9, 3.60314255813376*^9}, {
  3.603143421608959*^9, 3.6031434323664293`*^9}}]
}, Open  ]],

Cell["\<\
Instead for a Type 1b system with a omnidirectional sensor, our equation \
becomes:\
\>", "Text",
 CellChangeTimes->{{3.60314273014535*^9, 3.603142759025353*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"braiten1bOmni", "(", "x_", ")"}], ":=", 
   FractionBox[
    RowBox[{"K", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "-", "x"}], ")"}], "2"], "+", "1"}], ")"}]}], 
    RowBox[{"\[Alpha]", " ", "S"}]]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.603142787126924*^9, 3.603142847844839*^9}}],

Cell["\<\
whose phase portrait is as follows:\
\>", "Text",
 CellChangeTimes->{{3.603142855065689*^9, 3.603142868425002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"s", "-", "x"}], ")"}], "^", "n"}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "*", "S"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         OverscriptBox["x", "."]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
      ",", 
      RowBox[{"-", "50"}], ",", "50", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Alpha]", ",", "1", ",", "\"\<alpha: Sensor efficiency\>\""}], "}"}],
       ",", "0", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"K", ",", "1", ",", "\"\<K: Input to Output Factor\>\""}], 
       "}"}], ",", "0", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "1", ",", "\"\<S: Source strength\>\""}], "}"}], ",",
       "1", ",", "10", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "2", ",", "\"\<n: Stimulus degradation\>\""}], "}"}],
       ",", "1", ",", "3", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603142881037912*^9, 3.603142916638493*^9}, {
   3.6031429786617823`*^9, 3.603142999144359*^9}, 3.6031434373724737`*^9, {
   3.603143531926157*^9, 3.603143532259452*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{K$$ = 1, $CellContext`n$$ = 2, $CellContext`s$$ = 
    0, $CellContext`S$$ = 1, $CellContext`\[Alpha]$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`\[Alpha]$$], 1, "alpha: Sensor efficiency"}, 0, 1}, {{
       Hold[K$$], 1, "K: Input to Output Factor"}, 0, 1}, {{
       Hold[$CellContext`S$$], 1, "S: Source strength"}, 1, 10}, {{
       Hold[$CellContext`n$$], 2, "n: Stimulus degradation"}, 1, 3}}, 
    Typeset`size$$ = {360., {99., 103.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$54636$$ = 0, $CellContext`\[Alpha]$54637$$ = 0, 
    K$54638$$ = 0, $CellContext`S$54639$$ = 0, $CellContext`n$54640$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       K$$ = 1, $CellContext`n$$ = 2, $CellContext`s$$ = 0, $CellContext`S$$ = 
        1, $CellContext`\[Alpha]$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$54636$$, 0], 
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$54637$$, 0], 
        Hold[K$$, K$54638$$, 0], 
        Hold[$CellContext`S$$, $CellContext`S$54639$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$54640$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(K$$ ($CellContext`s$$ - \
$CellContext`x)^$CellContext`n$$)/($CellContext`\[Alpha]$$ $CellContext`S$$), \
{$CellContext`x, -10, 20}, PlotRange -> Full, AspectRatio -> 0.5, 
        AxesLabel -> {$CellContext`x, 
          OverDot[$CellContext`x, 1]}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`\[Alpha]$$, 1, 
          "alpha: Sensor efficiency"}, 0, 1, Appearance -> "Labeled"}, {{
         K$$, 1, "K: Input to Output Factor"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`S$$, 1, "S: Source strength"}, 1, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`n$$, 2, "n: Stimulus degradation"}, 1, 3, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{836., {125., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.603142920904785*^9, {3.6031429795134583`*^9, 3.603143000791512*^9}, 
   3.60314343851748*^9, 3.603143540771887*^9, 3.603285987745308*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Systems with directional sensors\
\>", "Section",
 CellChangeTimes->{{3.603141981473083*^9, 3.603141989905528*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"braiten1aDot", "(", "x_", ")"}], ":=", 
   FractionBox[
    RowBox[{"\[Alpha]", " ", "K", " ", "S"}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "x"}], ")"}]}]], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"s", "-", "x"}], ")"}], "2"], "+", "1"}]]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.6030536278039837`*^9, 3.603053650042532*^9}, {
   3.603063879130382*^9, 3.60306389969097*^9}, 3.603063968355166*^9, {
   3.6030640137702303`*^9, 3.6030640657340527`*^9}, {3.603064139430739*^9, 
   3.603064163670391*^9}, {3.6030641997810507`*^9, 3.6030642043895082`*^9}, 
   3.603064317510377*^9, {3.6030643527025537`*^9, 3.6030643614853992`*^9}, {
   3.603064484942046*^9, 3.6030644878444233`*^9}, {3.6030646045576468`*^9, 
   3.603064606033504*^9}, {3.603064703117693*^9, 3.603064725108211*^9}, {
   3.6030647590138483`*^9, 3.603064835149639*^9}, 3.6030707917768803`*^9, {
   3.603070829838566*^9, 3.6030708376873302`*^9}, {3.603070871650234*^9, 
   3.6030708862091007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"braiten1aDot", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"OverDot", "[", "x", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603064242274475*^9, 3.603064303964006*^9}, {
  3.6030644146274347`*^9, 3.60306441757201*^9}, {3.603065189412418*^9, 
  3.603065197588148*^9}, {3.6030652643416*^9, 3.6030653564211197`*^9}, {
  3.603065397742264*^9, 3.603065467245906*^9}, {3.6030657025273447`*^9, 
  3.603065706584302*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Hik=
     "]]}},
  AspectRatio->0.5,
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox[
     OverscriptBox["x", "."], TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {0., 0.9943022525404612}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.603064596690031*^9, {3.603064750895431*^9, 3.603064809197158*^9}, 
   3.6030648399778214`*^9, 3.603065198488208*^9, 3.603065238495665*^9, {
   3.603065273449401*^9, 3.60306529429679*^9}, {3.603065327601969*^9, 
   3.603065357158105*^9}, {3.603065406432941*^9, 3.603065420768339*^9}, {
   3.603065455744416*^9, 3.603065468089921*^9}, 3.6030657077125797`*^9, {
   3.603070821763878*^9, 3.6030708756903667`*^9}, 3.6031421584997387`*^9, 
   3.603142222622566*^9, 3.603286002740595*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"braiten1bDot", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"OverDot", "[", "x", "]"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.60306462235625*^9, 3.603064632426256*^9}, {
   3.603064736458008*^9, 3.603064738210149*^9}, {3.603064844058467*^9, 
   3.603064924559629*^9}, 3.6030649786234283`*^9, {3.603065749781619*^9, 
   3.6030657564872427`*^9}, {3.603066239255168*^9, 3.603066245783719*^9}, {
   3.60306841341695*^9, 3.603068414664611*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxN13kw1fv7AHB7thxbOch6iihLicQ553lHlsotCcmWLF3bJUtStopLKm2W
slXIllQ3hfrK59gLl0KWlD378jmbg5t8+8185/o9M8+85/XHM/PMe+aZZx4V
90AbLx4uLi7mr/y/N2riN8baGomWR7b/shbjisYjNrP7f5Bo/gqdMS7nXdER
8UFOxTKJVtG24FYV4IqU951dDWSSaIO5gt1RLq6o9tpdwaFxEs1VovI6wdgV
CWr3KNL+JtEMN4htC1h0QSmhbocvZZJoJvZpBGKACyrhDnnMtZdEK7xMrFc8
7Yz4vSx2y7qo0lBR7cuvmo5IqrfBP/eOCi0PvXUg6Dggm7oMD41mZZqqVca5
Hmt7FLFA8b89qkQjRmlsIbjZosrzGb7PjyrS9hH33N+Yb4OO3LVT/pm+haZB
PlZ4tt8aWWS/O2I5K0drtf9I7T19BBU0XegOcZKl5Q/rHWsKOIxc41I2tRfJ
0ETthZZOeFuiaDfeZyJSm2lbPYusf1abIS4tJcz0T2lawKh7hvghU/TlenpC
yWdJWh+WcMe1BaEtwt7FLBMJWv103R9fEAX56Wvy928h0DyjvuF7JwyRx96B
oro6EVrMfvv20B97kGa40VrAY0HaNv6e8E0Fu1DOt+P1F/bz03oWbJ/uxnai
icubyBZEHppvgbxWvIU6epu63WzSfhUrYrjb2BNUke5UH0snexGz4dbl2WEl
j0JxLQ2ZuEXsXWu48qyWPKrkXHb56buIBYokz9EI8mi/gGZjq+EiVjRinJLf
KYdsSBfv+XSxsbNLrlJOznLonIucUZ4IGztYM90bFiSL3n5yjNl8kYnpvCde
Dnoigw687Rdatcex/zxpMws5IY2ePcnf12SMY52KnoQ1Y2lEzAz0uaOMY6Q/
SD9ylKVRN0fg7uGuBcznvhJoTUuhbRH24tkr81i6hpjfyWgpVHuZLYos5rBL
BvWOgiWS6MdNPYH4oSnMcyU5nbZJAn0MbPKSezKFXXrt+V53VRzlWTs1PAuZ
wroOnZKrHBNHhyRj43oEpjBVvg510VfiKD21g0dDaxJz/6t08sNxcWSQFbTW
cmEc65yN4DPUIaCzxc+XJKRGMQW7OA3906JIVywg1mRoBHO4kTVYZSiK6ME7
xUJKRzD/c5Gz/uKiKJhcTOqyGMFILsnC5jQRdK4990ha5DDWcEXB4auKCGJO
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
AsywAZk=
     "]]}},
  AspectRatio->0.5,
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox[
     OverscriptBox["x", "."], TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {0., 121.99999102040833`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6030675414355383`*^9, {3.603068034492621*^9, 3.603068079359853*^9}, {
   3.603068258629081*^9, 3.6030682659781303`*^9}, {3.6030683647861347`*^9, 
   3.603068378042404*^9}, 3.603068415308371*^9, 3.60307092646644*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603067536866191*^9, 3.603067537363655*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603066288584916*^9, 3.603066289804207*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603065784569044*^9, 3.603065784970545*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"braiten1bDot", "(", "x_", ")"}], ":=", 
   FractionBox[
    RowBox[{"K", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "-", "x"}], ")"}], "2"], "+", "1"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]", " ", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{"s", "-", "x"}], ")"}]}]], "+", "1"}], ")"}]}]]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.6030658124398737`*^9, 3.603065920830475*^9}, {
   3.60306616218382*^9, 3.60306616435865*^9}, {3.60306626159803*^9, 
   3.603066264760169*^9}, {3.603067460869783*^9, 3.6030675294303417`*^9}, {
   3.603068019613885*^9, 3.6030680760953293`*^9}, {3.603068219662315*^9, 
   3.603068255640127*^9}, {3.603068342406041*^9, 3.603068357561273*^9}, 
   3.603070907876006*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"braiten1aDot", "(", "x_", ")"}], ":=", 
   FractionBox[
    RowBox[{"\[Alpha]", " ", "K", " ", "S"}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "x"}], ")"}]}]], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"s", "-", "x"}], ")"}], "2"], "+", "1"}]]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.6030661856521053`*^9, 3.603066193427546*^9}, {
   3.603066346020125*^9, 3.603066369061357*^9}, {3.603067260844777*^9, 
   3.6030672768554564`*^9}, 3.603070918054768*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FormBox[
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"K", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"s", "-", "x"}], ")"}], "2"], "+", "1"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Alpha]", " ", "S"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", "x"}], ")"}]}]], "+", "1"}], ")"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          OverscriptBox["x", "."]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
       ",", 
       RowBox[{"-", "50"}], ",", "50", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Alpha]", ",", "1", ",", "\"\<alpha: Sensor efficiency\>\""}], 
        "}"}], ",", "0", ",", "1", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", 
         RowBox[{"-", "10"}], ",", "\"\<Beta: Logistic parameter\>\""}], 
        "}"}], ",", 
       RowBox[{"-", "20"}], ",", "0", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"K", ",", "1", ",", "\"\<K: Input to Output Factor\>\""}], 
        "}"}], ",", "0", ",", "1", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"S", ",", "1", ",", "\"\<S: Source strength\>\""}], "}"}], 
       ",", "1", ",", "10", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "2", ",", "\"\<n: Stimulus degradation\>\""}], 
        "}"}], ",", "1", ",", "3", ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}],
   TraditionalForm], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.603068785739148*^9, 3.6030688176250763`*^9}, {
   3.603069680609344*^9, 3.6030696997931004`*^9}, {3.6030697728507032`*^9, 
   3.6030699207266817`*^9}, {3.6030700536665688`*^9, 
   3.6030702036110773`*^9}, {3.603070240397677*^9, 3.603070264912603*^9}, {
   3.603070634357092*^9, 3.60307063536343*^9}, {3.60307096096987*^9, 
   3.603070995408321*^9}, {3.603071052772559*^9, 3.60307105295198*^9}, {
   3.6031080790342617`*^9, 3.6031081155059032`*^9}, 3.603108290045658*^9, {
   3.603108323008512*^9, 3.603108382537363*^9}, {3.603108489422161*^9, 
   3.603108552398881*^9}, {3.603108742868145*^9, 3.603108759416984*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{K$$ = 1, $CellContext`n$$ = 
    2, $CellContext`s$$ = -1.7999999999999972`, $CellContext`S$$ = 
    1, $CellContext`\[Alpha]$$ = 1, $CellContext`\[Beta]$$ = -10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`\[Alpha]$$], 1, "alpha: Sensor efficiency"}, 0, 1}, {{
       Hold[$CellContext`\[Beta]$$], -10, "Beta: Logistic parameter"}, -20, 
      0}, {{
       Hold[K$$], 1, "K: Input to Output Factor"}, 0, 1}, {{
       Hold[$CellContext`S$$], 1, "S: Source strength"}, 1, 10}, {{
       Hold[$CellContext`n$$], 2, "n: Stimulus degradation"}, 1, 3}}, 
    Typeset`size$$ = {360., {99., 103.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$47351$$ = 0, $CellContext`\[Alpha]$47352$$ = 
    0, $CellContext`\[Beta]$47353$$ = 0, K$47354$$ = 
    0, $CellContext`S$47355$$ = 0, $CellContext`n$47356$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       K$$ = 1, $CellContext`n$$ = 2, $CellContext`s$$ = 0, $CellContext`S$$ = 
        1, $CellContext`\[Alpha]$$ = 1, $CellContext`\[Beta]$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$47351$$, 0], 
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$47352$$, 0], 
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$47353$$, 0], 
        Hold[K$$, K$47354$$, 0], 
        Hold[$CellContext`S$$, $CellContext`S$47355$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$47356$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[K$$ ((($CellContext`s$$ - $CellContext`x)^2 + 
          1)/(($CellContext`\[Alpha]$$ $CellContext`S$$) (
          E^($CellContext`\[Beta]$$ ($CellContext`s$$ - $CellContext`x)) + 
          1))), {$CellContext`x, -10, 10}, PlotRange -> Full, AspectRatio -> 
        0.5, AxesLabel -> {$CellContext`x, 
          OverDot[$CellContext`x, 1]}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`\[Alpha]$$, 1, 
          "alpha: Sensor efficiency"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`\[Beta]$$, -10, 
          "Beta: Logistic parameter"}, -20, 0, Appearance -> "Labeled"}, {{
         K$$, 1, "K: Input to Output Factor"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`S$$, 1, "S: Source strength"}, 1, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`n$$, 2, "n: Stimulus degradation"}, 1, 3, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{837., {125., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.603108552928528*^9, {3.6031087449265842`*^9, 3.603108760982218*^9}, 
   3.603125285555191*^9, 3.603142188592792*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603069737503792*^9, 3.6030697402053423`*^9}, 
   3.603070480254424*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"\[Alpha]", " ", "K", " ", "S"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"s", "-", "x"}], ")"}], "n"], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"s", "-", "x"}], ")"}]}]], "+", "1"}]],
       TraditionalForm], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         OverscriptBox["x", "."]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
      ",", 
      RowBox[{"-", "50"}], ",", "50", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Alpha]", ",", "1", ",", "\"\<alpha: Sensor efficiency\>\""}], "}"}],
       ",", "0", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{"-", "10"}], ",", "\"\<Beta: Logistic parameter\>\""}], "}"}],
       ",", 
      RowBox[{"-", "20"}], ",", "0", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"K", ",", "1", ",", "\"\<K: Input to Output Factor\>\""}], 
       "}"}], ",", "0", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "1", ",", "\"\<S: Source strength\>\""}], "}"}], ",",
       "1", ",", "10", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "2", ",", "\"\<n: Stimulus degradation\>\""}], "}"}],
       ",", "1", ",", "3", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.603070528352234*^9, {3.6030705740697317`*^9, 3.603070613238174*^9}, {
   3.6031081538212967`*^9, 3.60310815563612*^9}, 3.603108190329557*^9, {
   3.603108239842134*^9, 3.603108240699257*^9}, 3.603108776645381*^9, {
   3.6031164967044287`*^9, 3.6031164967289143`*^9}, {3.603125240637258*^9, 
   3.603125256494503*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{K$$ = 1, $CellContext`n$$ = 2, $CellContext`s$$ = 
    0, $CellContext`S$$ = 1, $CellContext`\[Alpha]$$ = 
    1, $CellContext`\[Beta]$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`\[Alpha]$$], 1, "alpha: Sensor efficiency"}, 0, 1}, {{
       Hold[$CellContext`\[Beta]$$], -10, "Beta: Logistic parameter"}, -20, 
      0}, {{
       Hold[K$$], 1, "K: Input to Output Factor"}, 0, 1}, {{
       Hold[$CellContext`S$$], 1, "S: Source strength"}, 1, 10}, {{
       Hold[$CellContext`n$$], 2, "n: Stimulus degradation"}, 1, 3}}, 
    Typeset`size$$ = {360., {99., 103.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$46368$$ = 0, $CellContext`\[Alpha]$46369$$ = 
    0, $CellContext`\[Beta]$46370$$ = 0, K$46371$$ = 
    0, $CellContext`S$46372$$ = 0, $CellContext`n$46373$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       K$$ = 1, $CellContext`n$$ = 2, $CellContext`s$$ = 0, $CellContext`S$$ = 
        1, $CellContext`\[Alpha]$$ = 1, $CellContext`\[Beta]$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$46368$$, 0], 
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$46369$$, 0], 
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$46370$$, 0], 
        Hold[K$$, K$46371$$, 0], 
        Hold[$CellContext`S$$, $CellContext`S$46372$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$46373$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[($CellContext`\[Alpha]$$ 
         K$$) ($CellContext`S$$/(($CellContext`s$$ - \
$CellContext`x)^$CellContext`n$$ + 
         E^($CellContext`\[Beta]$$ ($CellContext`s$$ - $CellContext`x)) + 
         1)), {$CellContext`x, -10, 10}, PlotRange -> Full, AspectRatio -> 
        0.5, AxesLabel -> {$CellContext`x, 
          OverDot[$CellContext`x, 1]}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`\[Alpha]$$, 1, 
          "alpha: Sensor efficiency"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`\[Beta]$$, -10, 
          "Beta: Logistic parameter"}, -20, 0, Appearance -> "Labeled"}, {{
         K$$, 1, "K: Input to Output Factor"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`S$$, 1, "S: Source strength"}, 1, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`n$$, 2, "n: Stimulus degradation"}, 1, 3, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{837., {125., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.603070529336937*^9, 3.603070616614676*^9, 3.603108157858047*^9, 
   3.603108191554769*^9, 3.6031082422506*^9, 3.603108777882905*^9, {
   3.603125245556753*^9, 3.60312525715703*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603113537983014*^9, 3.603113547175845*^9}}],

Cell[TextData[{
 StyleBox["Multi-sensor analysis", "Subsection"],
 "\nFirst, let us now rewrite the previous functions in terms of sensor \
readings (",
 StyleBox["y",
  FontSlant->"Italic"],
 "  functions), actuator functions (",
 StyleBox["u",
  FontSlant->"Italic"],
 " functions) and let\[CloseCurlyQuote]s Mathematica do the composition to \
obtain the  ",
 StyleBox["dx/dt",
  FontSlant->"Italic"],
 "  function to be plotted for qualitative analysis).\nFirst the sensor \
function, rewritten with all parameters as arguments. Notice that this is a \
generic function that can then be reused, once parameters are properly set, \
for different sensors:\n\n"
}], "Text",
 CellChangeTimes->{{3.6031165683129272`*^9, 3.6031166415689163`*^9}, {
  3.6031167000192137`*^9, 3.603116817641169*^9}, {3.603116848841247*^9, 
  3.6031169512892036`*^9}, {3.603117075065435*^9, 3.603117119251341*^9}, {
  3.6031186520921373`*^9, 3.6031187120337763`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sensorGenericForward", "[", 
   RowBox[{
   "x_", ",", "s_", ",", "\[Alpha]_", ",", "S_", ",", "n_", ",", "\[Beta]_"}],
    "]"}], " ", ":=", " ", 
  FormBox[
   FractionBox[
    RowBox[{"\[Alpha]", " ", "S"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{"s", "-", "x"}], ")"}]}]], "+", "1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", " ", "[", 
         RowBox[{"s", "-", "x"}], "]"}], "n"], "+", "1"}], ")"}]}]],
   TraditionalForm]}]], "Input",
 CellChangeTimes->{{3.603116954921074*^9, 3.6031170335574837`*^9}, {
   3.603117094396574*^9, 3.603117139556613*^9}, {3.6031171697975273`*^9, 
   3.6031172689052563`*^9}, {3.603117310839746*^9, 3.603117404620175*^9}, {
   3.603117453011478*^9, 3.603117457722147*^9}, {3.6031176901445293`*^9, 
   3.603117710281686*^9}, {3.6031182230403357`*^9, 3.6031182242009983`*^9}, 
   3.603118582356048*^9, {3.603118753616757*^9, 3.603118762695086*^9}}],

Cell["", "Text"],

Cell["\<\
Now let\[CloseCurlyQuote]s test it with a manipulated chart  (logistic \
coefficient \[Beta] is fixed at -10):\
\>", "Text",
 CellChangeTimes->{{3.603117484337247*^9, 3.603117506384757*^9}, {
  3.6031182833618307`*^9, 3.6031183146748962`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"sensorGenericForward", "[", 
      RowBox[{"x", ",", "s", ",", "\[Alpha]", ",", "S", ",", "n", ",", 
       RowBox[{"-", "10"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "stimulus"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "50"}], ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "\"\<alpha: Sensor efficiency\>\""}],
       "}"}], ",", "0", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S", ",", "1", ",", "\"\<S: Source strength\>\""}], "}"}], ",", 
     "1", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", "\"\<n: Stimulus degradation\>\""}], "}"}], 
     ",", "1", ",", "3", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6031175252873793`*^9, 3.603117536374255*^9}, {
   3.603117583345155*^9, 3.603117589024995*^9}, {3.603118163094305*^9, 
   3.603118181060609*^9}, {3.6031182282851133`*^9, 3.6031182674517593`*^9}, {
   3.603118590840846*^9, 3.6031185910466833`*^9}, 3.6031187793562727`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2.122, $CellContext`s$$ = 
    0., $CellContext`S$$ = 1., $CellContext`\[Alpha]$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`\[Alpha]$$], 1, "alpha: Sensor efficiency"}, 0, 1}, {{
       Hold[$CellContext`S$$], 1, "S: Source strength"}, 1, 10}, {{
       Hold[$CellContext`n$$], 2, "n: Stimulus degradation"}, 1, 3}}, 
    Typeset`size$$ = {360., {99., 103.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$37628$$ = 0, $CellContext`\[Alpha]$37629$$ = 
    0, $CellContext`S$37630$$ = 0, $CellContext`n$37631$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 2, $CellContext`s$$ = 
        0, $CellContext`S$$ = 1, $CellContext`\[Alpha]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$37628$$, 0], 
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$37629$$, 0], 
        Hold[$CellContext`S$$, $CellContext`S$37630$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$37631$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`sensorGenericForward[$CellContext`x, $CellContext`s$$, \
$CellContext`\[Alpha]$$, $CellContext`S$$, $CellContext`n$$, -10], \
{$CellContext`x, -10, 10}, PlotRange -> Full, AspectRatio -> 0.5, 
        AxesLabel -> {$CellContext`x, $CellContext`stimulus}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`\[Alpha]$$, 1, 
          "alpha: Sensor efficiency"}, 0, 1, Appearance -> 
         "Labeled"}, {{$CellContext`S$$, 1, "S: Source strength"}, 1, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`n$$, 2, "n: Stimulus degradation"}, 1, 3, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{832., {125., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6031175492300386`*^9, 3.603117589855927*^9, {3.6031176961939507`*^9, 
   3.603117718412558*^9}, 3.6031177973803473`*^9, 3.6031179592696753`*^9, 
   3.603118183404236*^9, {3.6031182296440573`*^9, 3.6031182796081533`*^9}, 
   3.6031185920799923`*^9, 3.6031187817232447`*^9}]
}, Open  ]],

Cell["", "Text"],

Cell[TextData[{
 "We could then define specific forward sensors for different stimulus \
sources.Notice, however, that the previous sensor definition mixes up \
world-related parameters (",
 StyleBox["S",
  FontSlant->"Italic"],
 ", ",
 StyleBox["s",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", which define the physical features of the stimulus source), with \
robot-related paramters (\[Alpha], the sensor\[CloseCurlyQuote]s efficiency) \
and math parameters (\[Beta], the logistic function coefficient). It would be \
better to separate those parameters in lists. However, keeping things simple \
and proceeding with  the sensor function just defined for now.\nIn a 1-sensor \
situation, the actuator command function ",
 StyleBox["u",
  FontSlant->"Italic"],
 ", would then simply multiply (or divide)  the output of  s specific sensor \
for a constant, or apply other more sophisticated manipulations. To replicate \
the previous exercise, we could have the following actuator function for a \
Type 1a vehicle:"
}], "Text",
 CellChangeTimes->{{3.603118449897562*^9, 3.603118552274878*^9}, {
  3.603118598162574*^9, 3.6031186422819366`*^9}, {3.603118742867053*^9, 
  3.603118749187119*^9}, {3.603118786746722*^9, 3.603118877250598*^9}, {
  3.603118958060483*^9, 3.603118983962648*^9}, {3.603119203882729*^9, 
  3.603119379050527*^9}, {3.603122144861456*^9, 3.603122181276354*^9}, {
  3.603122271277053*^9, 3.603122298612311*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"u1a", "[", 
    RowBox[{"x_", ",", "s_", ",", "S_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"sensorGenericForward", "[", 
     RowBox[{"x", ",", "s", ",", "1", ",", "S", ",", "n", ",", 
      RowBox[{"-", "10"}]}], "]"}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"u1a", "[", 
     RowBox[{"x", ",", "0", ",", "1", ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.60311898787316*^9, 3.603119048622486*^9}, {
  3.603122229855433*^9, 3.6031222639193563`*^9}, {3.6031223419672403`*^9, 
  3.603122416314889*^9}, {3.603122471289681*^9, 3.603122569275372*^9}, {
  3.603122896137979*^9, 3.6031229865486927`*^9}, {3.603123021861071*^9, 
  3.603123036372758*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {1.3524336477149208`, 2.9569166772063887`*^44}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6031229398271933`*^9, 3.603122987218079*^9}, {
  3.60312302282465*^9, 3.6031230404115963`*^9}}]
}, Open  ]],

Cell[TextData[{
 "The state dynamics function ",
 StyleBox["dx/dt",
  FontSlant->"Italic"],
 "  is just identical to ",
 StyleBox["u",
  FontSlant->"Italic"],
 " in our simple case (no dynamics), so we could just write: "
}], "Text",
 CellChangeTimes->{{3.603122606541317*^9, 3.603122647556951*^9}, 
   3.603543912303618*^9}],

Cell[BoxData[
 RowBox[{"xDot", " ", ":=", " ", 
  RowBox[{"u1a", "[", 
   RowBox[{"x_", ",", "s_", ",", "S_", ",", "n_"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603122653132763*^9, 3.6031226801122837`*^9}}],

Cell["\<\
And now we can test with our manipulated chart, obtaining a result analogous \
to the previous one:\
\>", "Text",
 CellChangeTimes->{{3.6031227055492764`*^9, 3.6031227335810204`*^9}, {
  3.603122828093246*^9, 3.60312283077275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"xDot", "[", 
      RowBox[{"x", ",", "s", ",", "S", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        OverscriptBox["x", "."]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "50"}], ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S", ",", "1", ",", "\"\<S: Source strength\>\""}], "}"}], ",", 
     "1", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", "\"\<n: Stimulus degradation\>\""}], "}"}], 
     ",", "1", ",", "3", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603122750302088*^9, 3.6031228007321177`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2.122, $CellContext`s$$ = 
    15.400000000000006`, $CellContext`S$$ = 3.45, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`S$$], 1, "S: Source strength"}, 1, 10}, {{
       Hold[$CellContext`n$$], 2, "n: Stimulus degradation"}, 1, 3}}, 
    Typeset`size$$ = {360., {94., 99.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$44171$$ = 0, $CellContext`S$44172$$ = 
    0, $CellContext`n$44173$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 2, $CellContext`s$$ = 
        0, $CellContext`S$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$44171$$, 0], 
        Hold[$CellContext`S$$, $CellContext`S$44172$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$44173$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`xDot[$CellContext`x, $CellContext`s$$, $CellContext`S$$, \
$CellContext`n$$], {$CellContext`x, -10, 10}, PlotRange -> Full, AspectRatio -> 
        0.5, AxesLabel -> {$CellContext`x, 
          OverDot[$CellContext`x, 1]}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`S$$, 1, "S: Source strength"}, 1, 10, 
         Appearance -> 
         "Labeled"}, {{$CellContext`n$$, 2, "n: Stimulus degradation"}, 1, 3, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{832., {121., 128.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.603122779552202*^9, 3.603122818917864*^9, {3.6031229936688957`*^9, 
   3.603122996448277*^9}}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.6031287207068663`*^9, 3.603128749330625*^9}, {
  3.603286023222473*^9, 3.603286025388892*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
System with Homeo unit controlling sensor\
\>", "Section",
 CellChangeTimes->{{3.603286036611932*^9, 3.60328606621222*^9}}],

Cell[TextData[{
 "[The following analysis is actually wrong. I confused/conflated ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "as the output of the Homeo unit, with ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "as  the displacement of the vehicle. The two are related, but not \
identical. The output of the Homeo unit is actually the input to the motor, \
hence (dynamics aside) the ",
 StyleBox["velocity",
  FontSlant->"Italic"],
 " (not the displacement) of the unit. Hence, we should replace the term \
denoting the input to the unit with a function of ",
 StyleBox["t",
  FontSlant->"Italic"],
 "  expressed via the velocity of the vehicle]. "
}], "Text",
 CellChangeTimes->{{3.603543664470607*^9, 3.603543902551203*^9}, {
  3.603544078216833*^9, 3.603544082328273*^9}}],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.603551712676758*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "m"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "w"}], "*", "x"}], "+", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"s", "-", "x"}], ")"}], "^", "2"}]}], ")"}]}]}], ")"}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "50"}], ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "1", ",", "\"\<w: weight\>\""}], "}"}], ",", "0.01", 
     ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "2", ",", "\"\<m: mass\>\""}], "}"}], ",", "0.001", 
     ",", "1003", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603298248273435*^9, 3.603298263211347*^9}, {
   3.603298332039874*^9, 3.603298402695063*^9}, {3.603298434970461*^9, 
   3.603298617313212*^9}, {3.603298773598447*^9, 3.603298775317506*^9}, {
   3.603298851344149*^9, 3.6032988720397263`*^9}, 3.603298904523316*^9, {
   3.603298955375423*^9, 3.603298973047886*^9}, {3.6032991786958437`*^9, 
   3.6032992052952337`*^9}, 3.603299243706059*^9, {3.60329931919497*^9, 
   3.603299319702593*^9}, {3.603476952696999*^9, 3.6034769601483793`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 0.001, $CellContext`s$$ = 
    4.400000000000006, $CellContext`w$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 0, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`w$$], 1, "w: weight"}, 0.01, 1}, {{
       Hold[$CellContext`m$$], 2, "m: mass"}, 0.001, 1003}}, 
    Typeset`size$$ = {360., {182., 186.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$451397$$ = 0, $CellContext`w$451398$$ = 
    0, $CellContext`m$451399$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 2, $CellContext`s$$ = 
        0, $CellContext`w$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$451397$$, 0], 
        Hold[$CellContext`w$$, $CellContext`w$451398$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$451399$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/$CellContext`m$$) ((-$CellContext`w$$) $CellContext`x + 
         1/(1 + ($CellContext`s$$ - $CellContext`x)^2)), {$CellContext`x, -10,
          10}, PlotRange -> All, AspectRatio -> 1, 
        AxesLabel -> {$CellContext`x, $CellContext`y}], 
      "Specifications" :> {{{$CellContext`s$$, 0, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`w$$, 1, "w: weight"}, 0.01, 1, Appearance -> 
         "Labeled"}, {{$CellContext`m$$, 2, "m: mass"}, 0.001, 1003, 
         Appearance -> "Labeled"}}, "Options" :> {ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{804., {208., 215.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.603298263680601*^9, {3.603298338363758*^9, 3.603298403356245*^9}, {
   3.603298501899563*^9, 3.6032985177991323`*^9}, {3.603298550810523*^9, 
   3.6032985584103737`*^9}, {3.60329859025327*^9, 3.603298619692095*^9}, 
   3.6032987759298687`*^9, {3.603298876866864*^9, 3.603298905826828*^9}, {
   3.603298957070633*^9, 3.603298973830906*^9}, {3.603299179629396*^9, 
   3.603299206529261*^9}, 3.6032992451857986`*^9, 3.603299320126103*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "m"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "w"}], "*", "x"}], "+", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"s", "-", "x"}], ")"}], "^", "2"}]}], ")"}]}]}], 
        ")"}]}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603304565398417*^9, 3.603304584992724*^9}, {
  3.603304651563307*^9, 3.603304672155864*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "s"}], "3"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["w", "2"]}], "-", 
           RowBox[{
            SuperscriptBox["s", "2"], " ", 
            SuperscriptBox["w", "2"]}]}], ")"}]}], 
        RowBox[{"3", " ", "w", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["w", "2"]}], "-", 
            RowBox[{"18", " ", "s", " ", 
             SuperscriptBox["w", "3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["s", "3"], " ", 
             SuperscriptBox["w", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["w", "4"]}], "-", 
               RowBox[{"36", " ", "s", " ", 
                SuperscriptBox["w", "5"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "3"], " ", 
                SuperscriptBox["w", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["s", "2"], " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "4"], " ", 
                SuperscriptBox["w", "6"]}]}]]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}]], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"27", " ", 
            SuperscriptBox["w", "2"]}], "-", 
           RowBox[{"18", " ", "s", " ", 
            SuperscriptBox["w", "3"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["s", "3"], " ", 
            SuperscriptBox["w", "3"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["3"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"27", " ", 
               SuperscriptBox["w", "4"]}], "-", 
              RowBox[{"36", " ", "s", " ", 
               SuperscriptBox["w", "5"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["s", "3"], " ", 
               SuperscriptBox["w", "5"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["w", "6"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["s", "2"], " ", 
               SuperscriptBox["w", "6"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["s", "4"], " ", 
               SuperscriptBox["w", "6"]}]}]]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]], 
        RowBox[{"3", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", "w"}]]}]}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "s"}], "3"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["w", "2"]}], "-", 
           RowBox[{
            SuperscriptBox["s", "2"], " ", 
            SuperscriptBox["w", "2"]}]}], ")"}]}], 
        RowBox[{"3", " ", 
         SuperscriptBox["2", 
          RowBox[{"2", "/", "3"}]], " ", "w", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["w", "2"]}], "-", 
            RowBox[{"18", " ", "s", " ", 
             SuperscriptBox["w", "3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["s", "3"], " ", 
             SuperscriptBox["w", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["w", "4"]}], "-", 
               RowBox[{"36", " ", "s", " ", 
                SuperscriptBox["w", "5"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "3"], " ", 
                SuperscriptBox["w", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["s", "2"], " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "4"], " ", 
                SuperscriptBox["w", "6"]}]}]]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["w", "2"]}], "-", 
            RowBox[{"18", " ", "s", " ", 
             SuperscriptBox["w", "3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["s", "3"], " ", 
             SuperscriptBox["w", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["w", "4"]}], "-", 
               RowBox[{"36", " ", "s", " ", 
                SuperscriptBox["w", "5"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "3"], " ", 
                SuperscriptBox["w", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["s", "2"], " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "4"], " ", 
                SuperscriptBox["w", "6"]}]}]]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], 
        RowBox[{"6", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", "w"}]]}]}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "s"}], "3"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["w", "2"]}], "-", 
           RowBox[{
            SuperscriptBox["s", "2"], " ", 
            SuperscriptBox["w", "2"]}]}], ")"}]}], 
        RowBox[{"3", " ", 
         SuperscriptBox["2", 
          RowBox[{"2", "/", "3"}]], " ", "w", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["w", "2"]}], "-", 
            RowBox[{"18", " ", "s", " ", 
             SuperscriptBox["w", "3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["s", "3"], " ", 
             SuperscriptBox["w", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["w", "4"]}], "-", 
               RowBox[{"36", " ", "s", " ", 
                SuperscriptBox["w", "5"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "3"], " ", 
                SuperscriptBox["w", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["s", "2"], " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "4"], " ", 
                SuperscriptBox["w", "6"]}]}]]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"27", " ", 
             SuperscriptBox["w", "2"]}], "-", 
            RowBox[{"18", " ", "s", " ", 
             SuperscriptBox["w", "3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["s", "3"], " ", 
             SuperscriptBox["w", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["3"], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"27", " ", 
                SuperscriptBox["w", "4"]}], "-", 
               RowBox[{"36", " ", "s", " ", 
                SuperscriptBox["w", "5"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "3"], " ", 
                SuperscriptBox["w", "5"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["s", "2"], " ", 
                SuperscriptBox["w", "6"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["s", "4"], " ", 
                SuperscriptBox["w", "6"]}]}]]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], 
        RowBox[{"6", " ", 
         SuperscriptBox["2", 
          RowBox[{"1", "/", "3"}]], " ", "w"}]]}]}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.603304673076241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"v", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"s", "-", "x"}], ")"}], "^", "2"}]}], ")"}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w", "*", "x"}], ")"}], "/", "v"}]}], ",", 
     "\[IndentingNewLine]", "\t\t\t\t", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
     "\t\t\t\t", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", "\t\t\t\t", 
     RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", "\[IndentingNewLine]",
      "\t\t\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   "\t\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "5", ",", "\"\<s: Stimulus location\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "50"}], ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "0.11", ",", "\"\<w: weight\>\""}], "}"}], ",", 
     "0.01", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "10", ",", "\"\<viscosity\>\""}], "}"}], ",", 
     "1", ",", "100", ",", 
     RowBox[{"Appearance", " ", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "10", ",", "\"\<m: mass\>\""}], "}"}], ",", "0.001", 
     ",", "1003", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t\t", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603305047941827*^9, 3.603305068049492*^9}, {
  3.603305108949327*^9, 3.6033051699588947`*^9}, {3.60330520973703*^9, 
  3.603305217849798*^9}, {3.603305350412343*^9, 3.603305392365954*^9}, {
  3.603305547563698*^9, 3.603305667348619*^9}, {3.6033057071909037`*^9, 
  3.603305708678545*^9}, {3.603305761117955*^9, 3.603305826351178*^9}, {
  3.603305884181834*^9, 3.603305902406022*^9}, {3.603305970501296*^9, 
  3.6033059903175707`*^9}, {3.6033060235659733`*^9, 3.60330602520518*^9}, {
  3.603306103854018*^9, 3.603306125150231*^9}, {3.6033062192138147`*^9, 
  3.6033062484768*^9}, {3.603306476658574*^9, 3.6033065359179077`*^9}, {
  3.603386110757308*^9, 3.603386115442566*^9}, {3.6035358115192947`*^9, 
  3.6035358973329697`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 10, $CellContext`s$$ = 
    5, $CellContext`v$$ = 10, $CellContext`w$$ = 0.11, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 5, "s: Stimulus location"}, -50, 50}, {{
       Hold[$CellContext`w$$], 0.11, "w: weight"}, 0.01, 1}, {{
       Hold[$CellContext`v$$], 10, "viscosity"}, 1, 100}, {{
       Hold[$CellContext`m$$], 10, "m: mass"}, 0.001, 1003}}, 
    Typeset`size$$ = {360., {180., 184.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$1383243$$ = 0, $CellContext`w$1383244$$ = 
    0, $CellContext`v$1383245$$ = 0, $CellContext`m$1383246$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 10, $CellContext`s$$ = 
        5, $CellContext`v$$ = 10, $CellContext`w$$ = 0.11}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$1383243$$, 0], 
        Hold[$CellContext`w$$, $CellContext`w$1383244$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$1383245$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1383246$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[1/($CellContext`v$$ (
          1 + ($CellContext`s$$ - $CellContext`x)^2)) - ($CellContext`w$$ \
$CellContext`x)/$CellContext`v$$, {$CellContext`x, -10, 10}, PlotRange -> 
        Automatic, AspectRatio -> 1, 
        AxesLabel -> {$CellContext`x, $CellContext`y}], 
      "Specifications" :> {{{$CellContext`s$$, 5, 
          "s: Stimulus location"}, -50, 50, Appearance -> 
         "Labeled"}, {{$CellContext`w$$, 0.11, "w: weight"}, 0.01, 1, 
         Appearance -> "Labeled"}, {{$CellContext`v$$, 10, "viscosity"}, 1, 
         100, Appearance -> "Labeled"}, {{$CellContext`m$$, 10, "m: mass"}, 
         0.001, 1003, Appearance -> "Labeled"}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{804., {206., 213.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.603305668053973*^9, 3.6033057100566883`*^9, {3.603305762238352*^9, 
   3.6033057857152576`*^9}, {3.6033058175737667`*^9, 3.603305826772459*^9}, {
   3.603305885379133*^9, 3.6033059032251673`*^9}, 3.603305991372085*^9, 
   3.603306026484232*^9, {3.603306104764544*^9, 3.603306125773638*^9}, 
   3.603306241284047*^9, 3.603306540944023*^9, 3.603535842715184*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"20", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"5", "-", "x"}], ")"}], "^", "2"}]}], ")"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.1", "*", "x"}], ")"}], "/", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603307622823182*^9, 3.6033077793444633`*^9}, {
  3.603307816397727*^9, 3.603307829509624*^9}, {3.603307940833095*^9, 
  3.603307955936512*^9}, {3.603307996647839*^9, 3.603308035194893*^9}, {
  3.603308284330401*^9, 3.603308300298997*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"20", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", "x"}], ")"}], "2"]}], ")"}]}]], "-", 
  RowBox[{"0.005000000000000001`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.6033076385674067`*^9, 3.603307647893403*^9}, {
   3.603307712859091*^9, 3.603307780123022*^9}, {3.603307819691823*^9, 
   3.603307830176958*^9}, {3.603307941649415*^9, 3.603307956522884*^9}, 
   3.6033080377994213`*^9, 3.603308076126006*^9, {3.603308285608672*^9, 
   3.6033083019353333`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"%", ">", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6033078723862677`*^9, 3.603307884147154*^9}, {
  3.6033080498359613`*^9, 3.603308072988123*^9}, {3.603308207307085*^9, 
  3.603308208135026*^9}, {3.603308307485299*^9, 3.6033083095892477`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Reduce", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Reduce was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Reduce/ratnz\\\", ButtonNote -> \
\\\"Reduce::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6033083115108137`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "<", "0.4633703787941969`"}], "||", 
  RowBox[{
  "3.6932251338721294`", "<", "x", "<", "5.8434044873336735`"}]}]], "Output",
 CellChangeTimes->{
  3.603307885790193*^9, 3.6033079588178873`*^9, {3.60330804233044*^9, 
   3.603308078168413*^9}, 3.603308208906364*^9, {3.603308291001021*^9, 
   3.603308311518458*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "EquationTrekker`"}]], "Input",
 CellChangeTimes->{{3.6033859468301973`*^9, 3.6033859889213467`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquationTrekker", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "==", 
    RowBox[{
     RowBox[{"1", "/", "m"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "v"}], "*", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "-", 
       RowBox[{"w", "*", 
        RowBox[{"x", "[", "t", "]"}]}], "+", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"s", "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}], "^", "2"}]}], ")"}]}]}], 
      ")"}]}]}], ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"TrekParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "20"}], "}"}]}], "}"}]}], ",", "  ", 
      "\[IndentingNewLine]", 
      RowBox[{"w", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "1"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"m", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1000"}], "}"}]}], "}"}]}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.603386007968548*^9, 3.603386060105188*^9}, {
  3.603386142366352*^9, 3.603386208239093*^9}, {3.603386273198777*^9, 
  3.6033864531261463`*^9}, {3.603386552604604*^9, 3.603386614410775*^9}, {
  3.603386855711748*^9, 3.603386868652849*^9}, {3.603387244783704*^9, 
  3.6033872491315517`*^9}, {3.6033875672482243`*^9, 3.603387568962002*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"EquationTrekkerState", "[", 
     RowBox[{"\<\"\\\"\\!\\({\\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\",\
 \\\"\[Prime]\[Prime]\\\",\\nMultilineFunction->None][t] \[Equal] \
\\*FractionBox[\\nRowBox[{FractionBox[\\\"1\\\", \\nRowBox[{\\\"1\\\", \
\\\"+\\\", SuperscriptBox[\\nRowBox[{\\\"(\\\", \\nRowBox[{\\\"s\\\", \\\"-\\\
\", \\nRowBox[{\\\"Notebook$$110$310169`x\\\", \\\"[\\\", \\\"t\\\", \
\\\"]\\\"}]}], \\\")\\\"}], \\\"2\\\"]}]], \\\"-\\\", \\nRowBox[{\\\"w\\\", \
\\\" \\\", \\nRowBox[{\\\"Notebook$$110$310169`x\\\", \\\"[\\\", \\\"t\\\", \
\\\"]\\\"}]}], \\\"-\\\", \\nRowBox[{\\\"v\\\", \\\" \\\", \
\\nRowBox[{SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None], \\\"[\\\", \\\"t\\\", \
\\\"]\\\"}]}]}], \\\"m\\\"], Notebook$$110$310169`x, {t, 0, 100}}\\)\\\"\"\>",
       ",", "\<\"\\\"\\!\\({m \[Rule] 10.`, s \[Rule] 5.`, v \[Rule] 1.`, w \
\[Rule] 0.1`}\\)\\\"\"\>", ",", 
      TagBox[
       TagBox[GridBox[{
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.4000000000000004`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-10.05`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0., 0.5411764979362488]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.4000000000000004`, 
              Derivative[1][Notebook$$110$310169`x][0.] == -10.05}, {
             1.4000000000000004`, -10.05}, {0., {0., 100.}}, {
              RGBColor[1., 0., 0.5411764979362488], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.4499999999999993`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-11.149999999999999`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 1., 0.03529411926865578]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.4499999999999993`, 
              Derivative[1][Notebook$$110$310169`x][
               0.] == -11.149999999999999`}, {
             1.4499999999999993`, -11.149999999999999`}, {0., {0., 100.}}, {
              RGBColor[0., 1., 0.03529411926865578], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.1999999999999993`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] 1.`}\\)\\\"\"\>", ",", 
               " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.9843137264251709, 0., 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.1999999999999993`, 
              Derivative[1][Notebook$$110$310169`x][0.] == 1.}, {
             1.1999999999999993`, 1.}, {0., {0., 100.}}, {
              RGBColor[0.9843137264251709, 0., 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
1.6999999999999993`}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0.8941176533699036, 0.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][0.] == 
              1.6999999999999993`}, {1.25, 1.6999999999999993`}, {
             0., {0., 100.}}, {
              RGBColor[1., 0.8941176533699036, 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.3000000000000007`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
2.5999999999999996`}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.16470588743686676`, 0., 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.3000000000000007`, 
              Derivative[1][Notebook$$110$310169`x][0.] == 
              2.5999999999999996`}, {1.3000000000000007`, 
             2.5999999999999996`}, {0., {0., 100.}}, {
              RGBColor[0.16470588743686676`, 0., 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
\\(-4.05`\\), \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] 9.7`}\\)\\\"\"\>", 
               ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.6117647290229797, 0., 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == -4.05, 
              Derivative[1][Notebook$$110$310169`x][0.] == 9.7}, {-4.05, 
             9.7}, {0., {0., 100.}}, {
              RGBColor[0.6117647290229797, 0., 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
\\(-4.4`\\), \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\[Prime]\\\
\",\\nMultilineFunction->None][0.`] \[Equal] 8.35`}\\)\\\"\"\>", ",", 
               " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0., 0.9019607901573181]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == -4.4, 
              Derivative[1][Notebook$$110$310169`x][0.] == 8.35}, {-4.4, 
             8.35}, {0., {0., 100.}}, {
              RGBColor[1., 0., 0.9019607901573181], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-1.4499999999999993`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.4000000059604645, 1., 0.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][
               0.] == -1.4499999999999993`}, {1.25, -1.4499999999999993`}, {
             0., {0., 100.}}, {
              RGBColor[0.4000000059604645, 1., 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-1.9499999999999993`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.3490196168422699, 1., 0.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][
               0.] == -1.9499999999999993`}, {1.25, -1.9499999999999993`}, {
             0., {0., 100.}}, {
              RGBColor[0.3490196168422699, 1., 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-2.8000000000000007`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.7019608020782471, 1., 0.]],
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][
               0.] == -2.8000000000000007`}, {1.25, -2.8000000000000007`}, {
             0., {0., 100.}}, {
              RGBColor[0.7019608020782471, 1., 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-3.3499999999999996`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0.9254902005195618, 1., 0.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][
               0.] == -3.3499999999999996`}, {1.25, -3.3499999999999996`}, {
             0., {0., 100.}}, {
              RGBColor[0.9254902005195618, 1., 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-4.1`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0., 0.9333333373069763]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][0.] == -4.1}, {
             1.25, -4.1}, {0., {0., 100.}}, {
              RGBColor[1., 0., 0.9333333373069763], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.1500000000000004`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
3.5999999999999996`}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0., 0.15294118225574493`]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.1500000000000004`, 
              Derivative[1][Notebook$$110$310169`x][0.] == 
              3.5999999999999996`}, {1.1500000000000004`, 
             3.5999999999999996`}, {0., {0., 100.}}, {
              RGBColor[1., 0., 0.15294118225574493`], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.4499999999999993`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] 4.6`}\\)\\\"\"\>", ",",
                " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 0.24705882370471954`, 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.4499999999999993`, 
              Derivative[1][Notebook$$110$310169`x][0.] == 4.6}, {
             1.4499999999999993`, 4.6}, {0., {0., 100.}}, {
              RGBColor[0., 0.24705882370471954`, 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.5999999999999996`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] 5.55`}\\)\\\"\"\>", 
               ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0.0470588244497776, 0.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.5999999999999996`, 
              Derivative[1][Notebook$$110$310169`x][0.] == 5.55}, {
             1.5999999999999996`, 5.55}, {0., {0., 100.}}, {
              RGBColor[1., 0.0470588244497776, 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
2.1999999999999993`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] 6.95`}\\)\\\"\"\>", 
               ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 0.6666666865348816, 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 2.1999999999999993`, 
              Derivative[1][Notebook$$110$310169`x][0.] == 6.95}, {
             2.1999999999999993`, 6.95}, {0., {0., 100.}}, {
              RGBColor[0., 0.6666666865348816, 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.25`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \
\\\"\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \\(-4.75`\\)}\\)\\\
\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 1., 0.34117648005485535`]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.25, 
              Derivative[1][Notebook$$110$310169`x][0.] == -4.75}, {
             1.25, -4.75}, {0., {0., 100.}}, {
              RGBColor[0., 1., 0.34117648005485535`], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.4000000000000004`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-5.6`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[1., 0.8274509906768799, 0.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.4000000000000004`, 
              Derivative[1][Notebook$$110$310169`x][0.] == -5.6}, {
             1.4000000000000004`, -5.6}, {0., {0., 100.}}, {
              RGBColor[1., 0.8274509906768799, 0.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.4000000000000004`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \\(-6.25`\\)}\\)\\\"\"\
\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 0.6980392336845398, 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.4000000000000004`, 
              Derivative[1][Notebook$$110$310169`x][0.] == -6.25}, {
             1.4000000000000004`, -6.25}, {0., {0., 100.}}, {
              RGBColor[0., 0.6980392336845398, 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.6500000000000004`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \\(-7.649999999999999`\
\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 0.572549045085907, 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.6500000000000004`, 
              Derivative[1][Notebook$$110$310169`x][
               0.] == -7.649999999999999}, {
             1.6500000000000004`, -7.649999999999999}, {0., {0., 100.}}, {
              RGBColor[0., 0.572549045085907, 1.], "Line"}]]},
          {
           InterpretationBox[
            StyleBox[
             RowBox[{"TrekData", "[", 
              
              RowBox[{"\<\"\\\"\\!\\({Notebook$$110$310169`x[0.`] \[Equal] \
1.8499999999999996`, \\*SuperscriptBox[\\\"Notebook$$110$310169`x\\\", \\\"\
\[Prime]\\\",\\nMultilineFunction->None][0.`] \[Equal] \
\\(-9.`\\)}\\)\\\"\"\>", ",", " ", "\<\"<>\"\>"}], "]"}],
             FontColor->RGBColor[0., 0.03529411926865578, 1.]],
            
            TrekData[{
             Notebook$$110$310169`x[0.] == 1.8499999999999996`, 
              Derivative[1][Notebook$$110$310169`x][0.] == -9.}, {
             1.8499999999999996`, -9.}, {0., {0., 100.}}, {
              RGBColor[0., 0.03529411926865578, 1.], "Line"}]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]], ",", "\<\" <>\"\>"}], "]"}],
    EquationTrekker`EquationTrekkerState[{
     Derivative[2][
       Notebook$$110$310169`x][$CellContext`t] == $CellContext`m^(-1) ((
          1 + ($CellContext`s - 
            Notebook$$110$310169`x[$CellContext`t])^2)^(-1) - $CellContext`w 
        Notebook$$110$310169`x[$CellContext`t] - $CellContext`v 
        Derivative[1][Notebook$$110$310169`x][$CellContext`t]), 
      Notebook$$110$310169`x, {$CellContext`t, 0, 100}}, {$CellContext`m -> 
      10., $CellContext`s -> 5., $CellContext`v -> 1., $CellContext`w -> 
      0.1}, {
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.4000000000000004`, 
        Derivative[1][Notebook$$110$310169`x][0.] == -10.05}, {
       1.4000000000000004`, -10.05}, {0., {0., 100.}}, {
        RGBColor[1., 0., 0.5411764979362488], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.4499999999999993`, 
        Derivative[1][Notebook$$110$310169`x][0.] == -11.149999999999999`}, {
       1.4499999999999993`, -11.149999999999999`}, {0., {0., 100.}}, {
        RGBColor[0., 1., 0.03529411926865578], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.1999999999999993`, 
        Derivative[1][Notebook$$110$310169`x][0.] == 1.}, {
       1.1999999999999993`, 1.}, {0., {0., 100.}}, {
        RGBColor[0.9843137264251709, 0., 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == 1.6999999999999993`}, {
       1.25, 1.6999999999999993`}, {0., {0., 100.}}, {
        RGBColor[1., 0.8941176533699036, 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.3000000000000007`, 
        Derivative[1][Notebook$$110$310169`x][0.] == 2.5999999999999996`}, {
       1.3000000000000007`, 2.5999999999999996`}, {0., {0., 100.}}, {
        RGBColor[0.16470588743686676`, 0., 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == -4.05, 
        Derivative[1][Notebook$$110$310169`x][0.] == 9.7}, {-4.05, 9.7}, {
       0., {0., 100.}}, {
        RGBColor[0.6117647290229797, 0., 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == -4.4, 
        Derivative[1][Notebook$$110$310169`x][0.] == 8.35}, {-4.4, 8.35}, {
       0., {0., 100.}}, {
        RGBColor[1., 0., 0.9019607901573181], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == -1.4499999999999993`}, {
       1.25, -1.4499999999999993`}, {0., {0., 100.}}, {
        RGBColor[0.4000000059604645, 1., 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == -1.9499999999999993`}, {
       1.25, -1.9499999999999993`}, {0., {0., 100.}}, {
        RGBColor[0.3490196168422699, 1., 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == -2.8000000000000007`}, {
       1.25, -2.8000000000000007`}, {0., {0., 100.}}, {
        RGBColor[0.7019608020782471, 1., 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == -3.3499999999999996`}, {
       1.25, -3.3499999999999996`}, {0., {0., 100.}}, {
        RGBColor[0.9254902005195618, 1., 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == -4.1}, {1.25, -4.1}, {
       0., {0., 100.}}, {
        RGBColor[1., 0., 0.9333333373069763], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.1500000000000004`, 
        Derivative[1][Notebook$$110$310169`x][0.] == 3.5999999999999996`}, {
       1.1500000000000004`, 3.5999999999999996`}, {0., {0., 100.}}, {
        RGBColor[1., 0., 0.15294118225574493`], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.4499999999999993`, 
        Derivative[1][Notebook$$110$310169`x][0.] == 4.6}, {
       1.4499999999999993`, 4.6}, {0., {0., 100.}}, {
        RGBColor[0., 0.24705882370471954`, 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.5999999999999996`, 
        Derivative[1][Notebook$$110$310169`x][0.] == 5.55}, {
       1.5999999999999996`, 5.55}, {0., {0., 100.}}, {
        RGBColor[1., 0.0470588244497776, 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 2.1999999999999993`, 
        Derivative[1][Notebook$$110$310169`x][0.] == 6.95}, {
       2.1999999999999993`, 6.95}, {0., {0., 100.}}, {
        RGBColor[0., 0.6666666865348816, 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.25, 
        Derivative[1][Notebook$$110$310169`x][0.] == -4.75}, {1.25, -4.75}, {
       0., {0., 100.}}, {
        RGBColor[0., 1., 0.34117648005485535`], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.4000000000000004`, 
        Derivative[1][Notebook$$110$310169`x][0.] == -5.6}, {
       1.4000000000000004`, -5.6}, {0., {0., 100.}}, {
        RGBColor[1., 0.8274509906768799, 0.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.4000000000000004`, 
        Derivative[1][Notebook$$110$310169`x][0.] == -6.25}, {
       1.4000000000000004`, -6.25}, {0., {0., 100.}}, {
        RGBColor[0., 0.6980392336845398, 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.6500000000000004`, 
        Derivative[1][Notebook$$110$310169`x][0.] == -7.649999999999999}, {
       1.6500000000000004`, -7.649999999999999}, {0., {0., 100.}}, {
        RGBColor[0., 0.572549045085907, 1.], "Line"}], 
      EquationTrekker`TrekData[{
       Notebook$$110$310169`x[0.] == 1.8499999999999996`, 
        Derivative[1][Notebook$$110$310169`x][0.] == -9.}, {
       1.8499999999999996`, -9.}, {0., {0., 100.}}, {
        RGBColor[0., 0.03529411926865578, 1.], "Line"}]}, {
     EquationTrekker`TrekParameters -> {$CellContext`m -> {
         10., {1, 1000}}, $CellContext`s -> {5., {0, 20}}, $CellContext`v -> {
         1., {1, 20}}, $CellContext`w -> {0.1, {0.001, 1}}}, 
      PlotRange -> {{-10., 10.}, {-12.25, 10.}}, 
      "CanvasSize" -> {400, 445}}]], ",", 
   GraphicsBox[{{{}, {}, 
      {RGBColor[1., 0., 0.5411764979362488], LineBox[CompressedData["
1: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
A+Mc+YHAf3H4f62CE1g=
        "]]}}, 
     {RGBColor[1., 0., 0.5411764979362488], PointSize[0.02], 
      PointBox[{1.4000000000000004`, -10.05}], 
      ArrowBox[{{5.537232676785386, -0.034830012741751036`}, {
       5.527149175206351, -0.02636529337285002}}]}, {{}, {}, 
      {RGBColor[0., 1., 0.03529411926865578], LineBox[CompressedData["
1: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
PQtxWSxnzF3TNTTI2sKjblOI/wceRNaO
        "]]}}, 
     {RGBColor[0., 1., 0.03529411926865578], PointSize[0.02], 
      PointBox[{1.4499999999999993`, -11.149999999999999`}], 
      ArrowBox[{{1.833596628115435, -0.09548091398941659}, {
       1.7708765195802558`, -0.0952031653915025}}]}, {{}, {}, 
      {RGBColor[0.9843137264251709, 0., 1.], LineBox[CompressedData["
1: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
ZTB0
        "]]}}, 
     {RGBColor[0.9843137264251709, 0., 1.], PointSize[0.02], 
      PointBox[{1.1999999999999993`, 1.}], 
      ArrowBox[{{5.835260420314949, -0.005673796772892086}, {
       5.832818283096276, -0.005142431050269557}}]}, {{}, {}, 
      {RGBColor[1., 0.8941176533699036, 0.], LineBox[CompressedData["
1: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
        "]]}}, 
     {RGBColor[1., 0.8941176533699036, 0.], PointSize[0.02], 
      PointBox[{1.25, 1.6999999999999993`}], 
      ArrowBox[{{0.28538945465294924`, 0.009888360749203311}, {
       0.29835744663671493`, 0.010378093956559933`}}]}, {{}, {}, 
      {RGBColor[0.16470588743686676`, 0., 1.], LineBox[CompressedData["
1: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
DaMlEd0H38ud8f8AUPU/3g==
        "]]}}, 
     {RGBColor[0.16470588743686676`, 0., 1.], PointSize[0.02], 
      PointBox[{1.3000000000000007`, 2.5999999999999996`}], 
      ArrowBox[{{0.5857031856377379, -0.0021451851496748857`}, {
       0.5840291682816716, -0.002653061486799886}}]}, {{}, {}, 
      {RGBColor[0.6117647290229797, 0., 1.], LineBox[CompressedData["
1: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
MQ==
        "]]}}, 
     {RGBColor[0.6117647290229797, 0., 1.], PointSize[0.02], 
      PointBox[{-4.05, 9.7}], 
      ArrowBox[{{1.3319327022709575`, -0.05019793208687771}, {
       1.3031206742094517`, -0.050910670416730294`}}]}, {{}, {}, 
      {RGBColor[1., 0., 0.9019607901573181], LineBox[CompressedData["
1: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
        "]]}}, 
     {RGBColor[1., 0., 0.9019607901573181], PointSize[0.02], 
      PointBox[{-4.4, 8.35}], 
      ArrowBox[{{1.1724703840517485`, -0.04153841033521097}, {
       1.1478103401788395`, -0.042165071480041956`}}]}, {{}, {}, 
      {RGBColor[0.4000000059604645, 1., 0.], LineBox[CompressedData["
1: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
nYd/AOf4hJY=
        "]]}}, 
     {RGBColor[0.4000000059604645, 1., 0.], PointSize[0.02], 
      PointBox[{1.25, -1.4499999999999993`}], 
      ArrowBox[{{0.338350097450403, 0.0020917134216097027`}, {
       0.34080062722344007`, 0.002842896532152154}}]}, {{}, {}, 
      {RGBColor[0.3490196168422699, 1., 0.], LineBox[CompressedData["
1:eJxdx3k81Ikfx/ER68jKOsNY1ziSDq1UEp9RKFoiIh2OiihaFl0iiVSTUHJs
l6IclStXos83VxFihsl9No6c4z5ntn38/vu9Ho/34/14Kp/466DrKhKJlPBz
//3/mgZtnf/i4v/7T7ud30S4U2BP2ZpP/unhxfWZZM4UKL7bqcf30xeykhZE
dKdA1Kgs46oiF2n3RtSCPCfB4MC6QY4wF2U01OU9k9nwizm5/No8B1/aThQ0
V44DkKa4yTUczBTn0BhmI5ArXFHZnMhB7coPo5UNg9AXdodX3p+DA2q867Md
WTA6P/bBy4yDDszyX6heXdCw28TShYeDXUpBo0o7GmHvFw++C+9WUGvF25+t
XwqnS196vPZZwVmzG/eMJJ/g1tDASK7mCpqv1e+g0qqwtZ6Xe653GS+9PivE
zGtHu8I/XJMvLqN+s95Mim4/ujV37pEQXcbtUhtapKdG0eLHheCiF0s4whRO
SaqaxMBQjZmEXUtoKS8UokqbxYgCO90cxiLqKCdPSxkuojo94jTf2UW0NjGc
NODl4u8D3nrsngUc1XM1KfjGQwRdHzYxc1hAl8CWvuPKfETb5n6WWMM8QrP1
8ceO/MT73ZaC1mbzuLnpTHVwpCBhkO4iJFI6h+UUgXaJ3NWE3N929//Un8Pa
moH+sSUR4rTdVT7O6Vm8pTEQ8PHebwRH23xGJXYGU8XXFl+XESdqk57Ct4pp
7HDdN3Q0UoKIZ3pmbJubQvFSWp7HnCRh8PxG4bH1UyhPrvtUZyVNMDZ8tTzl
NIlKlVo8dCkZIqumeM7PnI1dVgyBOyhLKLnYkKP0JnCfZlCumyWZ6HRm3f7h
MIZDzsu89FJ5oqNTyOij2QiWTarhnt8ViJArA0+l9vxAn++CStsdFYl31/hz
rU0H8duAuaLxRSWi7+Cb8Lh4FtZ95dlmul6ZGD6whnaW24sx+dktLRXKxBNp
Ef/EgG7MoFY3lexXIQg+8doOcju2MJVa8otViKLHNxeGvb6hXbFgwl1ZCtHW
eIL34hgdW6x6mInnKYT4Tebi5shqHI3eITf2lkKkGT3UTKQjZjr22TkxKMTl
c1wxibwUzBGvKOxhUojuPZLPvig+BGa8Xs9JgkLc8lPvLJYshCjKZ2tGNIXg
b6imFfGXw/fT4XT1XRSiKunKR1ZNDdh9HbzrU6VC9Kfts82yokNFUIvr3C4V
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
        "]]}}, 
     {RGBColor[0.3490196168422699, 1., 0.], PointSize[0.02], 
      PointBox[{1.25, -1.9499999999999993`}], 
      ArrowBox[{{0.2952889373084606, 0.0013782757446013927`}, {
       0.2964217366646663, 0.0021415534450322724`}}]}, {{}, {}, 
      {RGBColor[0.7019608020782471, 1., 0.], LineBox[CompressedData["
1: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
bnsrFMLzYIvGm3EJ6L8ETpkd
        "]]}}, 
     {RGBColor[0.7019608020782471, 1., 0.], PointSize[0.02], 
      PointBox[{1.25, -2.8000000000000007`}], 
      ArrowBox[{{0.3086437285203638, -0.01872178998365375}, {
       0.2941198905524503, -0.016169067834072053`}}]}, {{}, {}, 
      {RGBColor[0.9254902005195618, 1., 0.], LineBox[CompressedData["
1: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
        "]]}}, 
     {RGBColor[0.9254902005195618, 1., 0.], PointSize[0.02], 
      PointBox[{1.25, -3.3499999999999996`}], 
      ArrowBox[{{6.0358900848018076`, -0.007158819409697459}, {
       6.0345830572519645`, -0.008984149044429795}}]}, {{}, {}, 
      {RGBColor[1., 0., 0.9333333373069763], LineBox[CompressedData["
1:eJxd1Hk01N3/APCxb2EYsxhClspeWRLq3oos1dAiqUjKUlmieGiVEClLZSnJ
Monssq+fix6PBmPGUoSS7RHKvkV85/f7/vd9/3PP69x77r3nvJctTl7Hnblx
OJwQFw73f+t/Yx64/H/g0f96T3lWh+jGHDB2eOPpyLFbdG6GzPocWBce8jvD
8cXoeLOdrbNgnR5R0uWAR40u4/+0v5oBgZuf8R63xaPtUWeJOI9pcHl0zabN
Co8u39k78btzAkwFBm0aAXgk6Mil1985Ckan/6Wva+PRNruQifSe70Au83ed
jAIeAVqvUGZjD2hs+0U2xuOR5f7yzO8TDUDnqNbj7J/i6EiJlRaLvwxTEvly
erJSHIVI3Os74tiF1bV57d0TJo6auIKypnwGMcePDK0YG3HES+o8Y6A6jl1W
6HeaUxRHz2Xjb459mMWaZu1O1n0WQ0Iml5fdXJex/UIXLtAfiyHKr58mW9b+
YBWtfG0J+8XQnju61x/VcSE5QbXjqYui6N3bsjylu7zoMU56vjpbFLmyRrQa
FAWR696mRpyZKEqOWveeqRRBpQWP8ZcHN6EJxr+EokPiSLGwPHjpziZ0f7XP
l/+iBJpTmlfPk96E9Hf5CQfJElDeYuCRqBIRxCU9L2LjTUR6NjF/9DREUJ0k
OTWwkoy64xtPGNCFkQAU+7ZpWRptC8g7lkQVRrImF3y51WSRbbm5svtTIRRq
kldwxVoO2U+8FM0RFkKNtkGzvYkKiP9ZB9nbShBdkg3rC+FVRAkCrhY7YgVQ
N73P/oCTElpnnM1Z6+VHCSY2X7aUKKNwd/bSmBI/skjEWvT+qKAx48w7Ah58
6NYQ3t21bBva0h9JSvbkRbzCrISSc6po1bxZd9iHB/FbJDHP/FRDg9khybw3
uZFE9Khh7GUNhIXtJGgEc6Hb1oYxb9maKJm1rB8cg0ORPFXLLg+10WmmCJIp
W8es2fkpWyJ3oIoLUw4k2zXMewad9Tbfid5s7muN5PmNNdal6f+e3YlCO662
iNcsYYmvxS3IkbsQPOx3jxK8gBXKm05speqgjOwHb2Xt5rDUwPB6zx4d5BM0
Y7siPI3Jt0oRan11UWDToWaxDz+wBuHnj3KnddH9IB6fjtohLPmefNvAYT1U
5LeWIoXvw0KqSqd4wvXQfCvxvegBNtbkZbjQ9E4PnTqusu5kU419dlaV983T
Q4F0k/MfmvNB4UaeNz1GD43Lijy4a9sCdnieDxQ6pYdMvztYpQV9Bld+mZrZ
ruuioXTetxA3AEiiRXd1nuiidcsHqe6dQ+DP36IHDPh0Ee1Dy7QU/BeEtVwS
nnbTQfQg1eifpuOAavicyy52F1KwWEn55fITuKcHHxbP2Yk6V3Jl1tanAJ99
FK9Q4Q7UNuQl5yo8A2wv6UaKWWsjI0ctM9bnGTBX+dVRRVUTVUU57Y64Ogti
TYvOz8ypoettUmnRH2dBylymyrPS7ahVIWvP/MIsgNLBHrYbKmhNwY6XNjUL
ePKhxvmjSmjv4qvG9NxZUHZayT8+UwFpS/cXHTSYBZOSjUtN2rJIvbbR8Fjc
DJDZm7qLdoCMCsUmzzYxp0HQNHQMfyqJJAq/SbSypoACpWejznoTSqqqzT7U
8RMcvbhVl1jKhzIlDPYeUZoEJsK+T+s31rHsSsaikdM4ME2cO/W30xz2qj5E
khU7BtqfiHXq7/qO2V896BrVMAqcR3+NmCymYe2zAzGGViPgOlOJpRfRC9hd
dTST/iGw3k7V9M2fAFs/69Csrw2C7z/j6Rcs5kFy1ut3XCLfwQTtrQif0W9g
pOzZyeX4DRzy7z0+ULABfJ5TNXg+9IHnsUsepNPckPzo0/PHZl+APq5hrHkT
D9Sohf55UT0gUbMoOqKaB2aqlSZZ9XYDnYe2xz1deWG/Yi07Xq0bmH6U2xEp
ygfNTs2I5d/5DA5asw7y5/PBX6rKATWdn8A2i0Bs9jA/PCdWe2xC+xP4547A
nfliASjfRSPUFXWCRxijuotPCM4OFBk1He8ANmFLwtehMPwqwvNDV7wdpNxY
Y7e6iEDXTUygM8ECglesykVubYLC5hrvm9htQMaa0eN7TxRKp321rJTinJm/
wO3vJwbLTK75W9FbQLyDNz7FSRwmHpAgPbnfDLrB/UaaEh56idoPeRQxgNH7
+7RgjmXxDXYKHBt8Hu2q4Fi4j3e4/T0DpH0qODfF8Z9exaAQji27vw0qK+Nh
yc3NugYc8/DecDvD8bTiwsp4IQMc2HDx+Zvj0QDHXGuOvb9PBexQwcOAMNOC
0gIGsPghfi+R46/0DO7NHN/V6tL6qIqHp5y2HtPMYgDMlm9uQRMPrWN6Ks+9
YQDl0FusLbvwcPhb7pHs1wzAT6K2HNHHQ7+eOIL0Cwb4Y773BPM8HuYqBloo
ujFARUhs96ZwPExe3/rt6UEGoB6Qn5Z5j4eryjtzXqozQMdzeT/xXjxkvQ9H
LgoMoOOV+GiVRwI6UrI2KygywNr5t2B1pwQUcBvSTNVhgAajNuvtjhKwtyv+
S40NA9zeFsWXEikBwxl1C+FhDNCtYVl8r0YCljgObOBaGGC36GLU8KQEtJFq
zPwj3wwO6mU6T8hKwqKhlWDt4GYwta+8WtFOEl5caZxUIraA+Y9yMTlxkrBu
TTGGVt0CYjsYsaVdkpAeajx55K9WkODGfdiNRID3FieF0QEm2LDKKA7huKDS
11HuIBM4/MiQo3P89OyV8tsc43fzhiOOPzgxJHs59jSqnuvn+LNdrNceEyZg
L7c5rHJszWAw4zk+Pp6np08mQLa+0NOTpkyQ2b4m6s3x5LdJB4lDTBD9oeLf
bI7V8T56TI7LR/jKl6UJ0N5mT/oOGhOIYlyUQ7IEKObG3RRnwwSh5+cFnssR
oMmSehTOngnu8yiHDSoQ4A2NkQmPS0zwYN82JGlAgHIB9Lir+Uzwjb569rYV
AZbhND0frzJB1O0OeQVXzvufZx5HmreBfQW0V+t3CdDNpMdaPa4N2PVFq1Hi
CdDFAfMlD7eB0tC96EM1AfJOm5ds12KBX8+WKv8MEqDZ16TezMssYCAhzMrh
loKCGvtbfF6wwNTL+pBSRSmopqVSw9/EAhZLFE3KQSmYXCftz7vAAh00J3vm
RSnYqdaoJqLABnyfM+c7g6VgjiFgV5qzQZnjsrJxphQ8drYmZuUaG4TG9YzP
NEvBKcxPGYtlg0NJzh9/TUnB0tvzLW9L2aBdLuOumhQRKnkJHTvZwQZstzzS
KwMivCLOl+A7wQa0mhguQ3siPOwp9r1hnQ2KO029qp8Q4dptmRcB+HaA+/Tb
wKmWCAeA4S2cdDt41nPcSnKKCK1iv76mUtrBS4K/VpE8CbpF3LPNF20Hnu6a
QN2aBEPtHxg1rbDB7a+VmhcCSXDdhLLjSR8bvCn21DMuIMG9Qu09gPO/5kvl
crglErw+KBVW7s4G05Y1A37GZHjOobaCT4INdq3f9zkTSIbXO9q9qt6wAFFe
0OFqPRnO+5gdD1FlgQEVwvw1bgq8cgooqhxoA3eGCcZ7IAV6b0APcSoTZDjj
SxJuUeCoiXrReH8LqElSXrlcTIGz6YPm6dHN4H6h3e5hHmkYu7jD6dTDj8CI
/TxF4ag0jNkz0i3n8g9gqG/QBqOkoac0r+Cczt/g1ZHQqo1maZiJm4Fdi/Xg
5MI7oiMXFcoK2ofPFSHAtbhnYVmbCjs7YuoffasGtb5DF1psqfC58cUI2rly
0P9XxPZ//alwavGLwOhwETjkoPYgNI4KhaaPwccfc8HhrYrPKrI59wkPXKLw
vwEK7yo6KsqpcEiwb2GNEgtUVjvUm2uocAU3unDkgQvwdhIoMayiwlG2rPtZ
nyfYvp9MZF9IhRFzmyk3vZOxJ9NxEjEpVBgeYVc4TM/ATn9trrILpsKfUdYp
KjsKsMOxD32LzlMhQ6C3wk63GPtjd2PytA4V7j5z0vVHdxlWaWO+II6jwsQN
dX4HShW2IDRo8q5RGqZcuKR65mcNNmx00hIXJg33T76OMFNF2D3zv/CrJtLw
jcE2JcctddgN9xH+R+sU+GJM8aV7Xx223c8uLKOEAtUWGmxET9djE/RD46eu
UuCJ0/Pau57WY9fmNXvSFCjwnZbuGC28Hrt886+Gl5/IUMr6hONr43osQFpV
3iqSDG+bxi965dRh+QXUZ3+dJsPGwbtXzuPrMBmxWoNaZTKs1ilOeUdD2EMR
mZzncySYwPNEqaS9FmOnbjVw/psEv9ZkxRk3VmM7BYtno19y6tFKxtn7biVm
mUDAeV4nwScNSGSEuxyrflqocIhTzy27ilNWz5ZgfTEeSTY7SZBHN0Du3dP3
2Mtu+2QGiQRtlw03bBzzMZ14l9kPOBLs6t3rGXHrHVZYjbad4vQLSbP8FiWc
jr1ojeMLGiTC7BOPtbp0EzHPq8ma4AsR/haKtVjeiMRawkv1DD8RoXZ+64zZ
tB2WMf/xTOFnInxlHr9R6BwE/KqWTuj1E2HSVIKgQPAzoP/minP0KBGmPCzI
iNubBOhK6z7Bc0R4J9bD20mFDpqM1nqbeUjwwYfo+bAjGQCNyZynkkkw2D0k
QW9TNhi8JkeQ0yTBtI2kXwX2eWBmzrhW34IE1bcNU7czC0CwyoLTkCsJnnm4
YEGSfw9knvlqvggjQWIC/4GTCkWg7M8MaMkiwZxtNDeu9iJw8pG29mwrCarc
9/2WqlcMaiTIjsEzJNhQn6vDRysG4cPhGtxEMtTnCjgnL18MVG2KK2d3k2G5
B0GrO7cIpGFmN0ftyNC223G0a+M9IMyuHfC/SYbrUpYnzGTeg4v+fGTaCzLc
zp+iXchfCPguXYqRLiVDuiHVLSgmHwT0hYoksMhQObLD1ZqVA8Rc0cPBn2So
G1FuIibzDhy+fqKLW4AC3YVPi3dtSwcL+I5d9TIUWJHVpnFdNBVUNuaxuDQo
UMKLNeJU/wI8Mm0hV+ymwJ23SJvdPGKASXxB99w+CtT+lGhWeS8ICBCdfFn7
KdBl/ObZkDc2QIigI36XM3+y7qweepLgj8n0PawxNKLA2rHhwjHaIwyOrLQe
20WBD+tKysafPsOkjhZ9WFGiwB2MMoVjKi+xe7UnH7dLUKCM/J1Jcm0yVsA3
EXZ3jQzbjcxvC6ukYXn4CVrWMBl+ug4XZvrpWF/u5iXBZjKsSDO7JsqfjiVu
H7ayLiBDzbHxnXWv0jHLAYFfurFkuIebaZL6Jh3jkx4eWb9FhqZkvx847XSs
dvyfqriLZCjfywwpN3uDeTU+Cbl9hDNfexmqgctpWIR7Al2Jkx+Vzt9JekdT
MZM2WedpJU5/vUo035LxGnsayyupTyBDudRCVrDeS+x+5L5renycfNy0bBRy
icXGvNY6ZH6T4GJ8rR08E41FxxXUc8+SYE8rIr53DcUkdAa2T0+S4GkP0wtV
NH/MTX2fc+M4CW49Abosi/SxE8cCBB05+6leDeX8vDeA4tf+3dZTJBg5cq20
wT8QDM8k303h9LeUM/tmi0co+A95/cq9
        "]]}}, 
     {RGBColor[1., 0., 0.9333333373069763], PointSize[0.02], 
      PointBox[{1.25, -4.1}], 
      ArrowBox[{{5.733704445759516, 0.008042840008885912}, {5.737916925918828,
        0.010951611993891087`}}]}, {{}, {}, 
      {RGBColor[1., 0., 0.15294118225574493`], LineBox[CompressedData["
1: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

        "]]}}, 
     {RGBColor[1., 0., 0.15294118225574493`], PointSize[0.02], 
      PointBox[{1.1500000000000004`, 3.5999999999999996`}], 
      ArrowBox[{{0.701602996988169, -0.011495822332770099`}, {
       0.6916917680924738, -0.01205513365482285}}]}, {{}, {}, 
      {RGBColor[0., 0.24705882370471954`, 1.], LineBox[CompressedData["
1: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
jqpKFe1+9sXj/wOt752f
        "]]}}, 
     {RGBColor[0., 0.24705882370471954`, 1.], PointSize[0.02], 
      PointBox[{1.4499999999999993`, 4.6}], 
      ArrowBox[{{0.8075630439904257, -0.019911378754258063`}, {
       0.7922614215893304, -0.020381336575547207`}}]}, {{}, {}, 
      {RGBColor[1., 0.0470588244497776, 0.], LineBox[CompressedData["
1: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
        "]]}}, 
     {RGBColor[1., 0.0470588244497776, 0.], PointSize[0.02], 
      PointBox[{1.5999999999999996`, 5.55}], 
      ArrowBox[{{0.9062116620307947, -0.027120098504867768`}, {
       0.8867830928724453, -0.027563373057246827`}}]}, {{}, {}, 
      {RGBColor[0., 0.6666666865348816, 1.], LineBox[CompressedData["
1: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
BqcxGD1Zy1Ti8ermXQIFFVgyQbU01EiCSFjWyWzufoofbhLjvnRcglif4xxk
6piNvQWc/joEShBcNRYXT7gbYM8z1WIMNwli9wGezqjpB2gHq8jzrboE4Wna
/CF1dSnKMQz9cKadStQpXDc33FOBBnJdNpp7UIl+n8BpEYsq5NcXaQud4sQG
gaC5cnYtKud+PG69WZwwj0/826D7HpF64jSPXBAjytewint5GpFq/D5KkZ0o
0ZWt7z2g1YI8n/t4+IqLELt/7LsSH9yKCgi+YJ/TggRaemWQeLQNGda95p3P
5CesP3lL84+1oQX2x0t6b3kIPy1bJ4eNH5H8W6/2mz2cxFj0PJZR+oia9N7M
KpEpxIOboc0j3W1IWK7l8ln+ZRyWVBJwy7cNGXj3dhHac3jf+l/iAT2taI5p
6bUpZgqzdqgdU1drRXsXr5QfERvDPR7tLNrRFnRSutyelTOIPX37kpM5m5Fj
co7Ts/s/sX7W4QxFxUZ09oS5+H2LT1ieHqBWpf4BkaW0B6qG7+ArSc2xpwPq
Uf/h00GZLrXo12Kb/r+9tehL3c9/Z2U+Iz5ZdqxkdDXqyPy0VVy3BwXK3dXZ
XvsWmTq+HXeEX6js+gWn3FWV6OzkvIMPaQA12b5JkHtZge4dBD6a0xBq0GiG
PP/XaDzA8GXeoX+IOfxO+63VS+T64+dYx/IoiiNzbIncWYq+n8g43aU4howr
73+zPF6Cllvs3CgFY0jAuyn8A+cTVGXj/+zP2nGU6cu5RuTAYyQbt/fWt/hx
1EkcP2ZWUoiuJZxalJ4bR7bWmVFeCgXoy6PF+EXbCRTKrG5KL8hFBZzX99UX
TCDuHXN2EyYPkMysukvd1ARyjZVV85vIQuXdnb0z9pOoKURih9XcXZTDl6Jy
rWASkbjGH4JPMiphUL9k/plE3pRZ3tcmcSjaJlfESmIKUSzKfrwZv4Kyeavi
MzWnELHp9BhJPQTp7+b8WbhtCsk5L4b4xh9Bu87RLq42nELPzrxJ/RrhgeuE
3LR01Vas5Lrp8EgoDmMPdIuKTCEp80iBXJvLOCv/DHfV70nEXFY8RKbcwBfj
EqKsSybR3aEaJU5yPF4l+Gd/tf8kOjzlPNSqlognq9+nGglPIr7wiJD33KnY
L6DfeChtAs0dcP6bszcd04QK4pekJ5CuJ49pBt89bMIYXZt1axxtYVst6ahm
4tYw194vS2OIq/HMQw7RLFzPo6N43n0M7VOoq2dVZOH4nTlGodMsZCD+CHEx
svFC9KGioigWEjxw5kPOoWz8f7g2ye4=
        "]]}}, 
     {RGBColor[0., 0.6666666865348816, 1.], PointSize[0.02], 
      PointBox[{2.1999999999999993`, 6.95}], 
      ArrowBox[{{1.0601780513285106`, -0.03730789568229516}, {
       1.0326372920031863`, -0.037816250167601685`}}]}, {{}, {}, 
      {RGBColor[0., 1., 0.34117648005485535`], LineBox[CompressedData["
1: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
        "]]}}, 
     {RGBColor[0., 1., 0.34117648005485535`], PointSize[0.02], 
      PointBox[{1.25, -4.75}], 
      ArrowBox[{{5.791448196285822, 0.027273137554159478`}, {
       5.805610177898012, 0.027447996083408543`}}]}, {{}, {}, 
      {RGBColor[1., 0.8274509906768799, 0.], LineBox[CompressedData["
1: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
OKXxF//0AzL8LiU1SpuOA/8FoPqjBw==
        "]]}}, 
     {RGBColor[1., 0.8274509906768799, 0.], PointSize[0.02], 
      PointBox[{1.4000000000000004`, -5.6}], 
      ArrowBox[{{5.852941617807635, 0.03115389770129041}, {5.867100153772129, 
       0.02921242838241584}}]}, {{}, {}, 
      {RGBColor[0., 0.6980392336845398, 1.], LineBox[CompressedData["
1:eJwVlXk01V0Xxw1FUgl3Ml2ZkgZlSIqcHUKGp0LS8KQIFRoUKiRlngpRZCZD
hSKZOz/kJsq9jyTk4hIZIkOExHvfP87a67P2OvusvdfZ36+c/SVLRz4eHp55
7vl/DGkpPWi2X4dorPS+XtjGR3gHZpSSrHUIn/Ry1+/VfARfuOGI7n5dYuZg
sqPwWl4i7F6Dg0LyXsLnjWWUdsMi/pKkRBGo0iNO/mNpI1H4G9NZhMKpLEQE
vTKaYbOmcKye4/TJrUBIezmKB536gYflAsy63IDYyW+VaPCwH/+h3hXjfwTE
oz+Mza2P2/BYcrvhsXwgVJEx2nu+GI/IHewbyAFiN07v193xDj0f96koCQXi
61d3f05lJ/L+LOD8yRqIf+KtU54d+Ibcjw/bGwoDETs76WcZPYLyZTWINacQ
IfZf2vd+qQnU66VdJhGgR/CWG7Ot06YQ42CkcPmDvcSm+GCXY+9+IUaOY1Vf
hC5hkubKU5A7izoVs2c+X9IhzgwlihJGcyjZU39nMewh/KIH5LZnzaNJzSqJ
m3y7ifGh1efq6xZQC8wFCZbtIooK2+ou5/5B+rsf0UlntQj2K0MB3SOLiC2X
fjbLWJPwuXIvnb6wiPQKHiSeUVAnghZlJ35t+YtEsIl92tJ2ovD4h6Kh2UU0
ZRxkT6/fQnRYnL2q5LyIVFSOKhdnKxOPt3IcXob8QaPNy0GkAgVip3W7uLnz
AjKoKXIIbZAl1gizPazWzaNiQl8iekaC8EupyZ3+/BvNpNmr/rhEInQj9Zd6
AmfRvyJ8T7VvrCMCWEFUV4UZdNXtgFfr9lWE6c4ULb49v1BscYuZkCofMfg+
WcvffBrdiSpvYgzP4QCP+U61k1NoCUeMRm2ZxFvYLuaOLycRO8duONqtH7vE
TJw0E5hEm1qSl/pPvMU/lxvFT56YQKpeG54+0m9A2TH9NsWZP9HE4ad05Y5e
dEtEjk8sZhzR5m2U6AajyD7P1NLpzhiSGXq+5mnOFDKdXPhh4fEDoeQTdx39
uH3MjrI9XEaRUbXBNnuVRRTjYVec6jiCBBOdjNSteKDJ3k459+wwstXGhfxS
fMBw7d9VFTeEou9eD0Ct/DBKIuzdmr6j3GmnJPBbCb2rqMhH4DuiW//Mvywt
COnkX0mNxoNoYo/ZuOnzVSCvwUd3uD+A+K/+Z2y3fTXIRFA6/DnfkEq6urpN
tjA0bWJYJet+Q6kXZyto9WuAlEeVlanrR+wmEWcj9lrge5823XS4H1Xblas9
yVsHBzWOBV7j70cJkVJMtrsIiBL2svkVfegh5ZHgQ+n1IGi1nD3m1YeWX8x8
NXZdD7bZIX8djPqQX7FsyJbK9VCa5Kt0RqIPZXpFytkIiUJqSL4abZKDwsR7
/btsREHZqL6g8CMHSb+sWNGaKQoblXf91inkoN5WxmbLCVF4a3ghriyOgxbb
M+iuumKw0uypFK8/B+lrvpfUChGDhzOJ8o2XOYhelKfH/04MCgUVnc45cVBw
1q0rhSvFQWFMyNb9FAfN2Zin6xuKQ/xARp+7LQfVVraN194RhyA9/64eKw5y
NhvXSn0tDhJrrTaWH+Kg5FTGZfcRcZDyKR6vteAgxftTCbp0EkR4zBxLNOWg
ixfkghcPk4D45Xi5y4iD7qGjQ4WBJJDtDtmkos9B8gfoNlblJBB9+dlyoy4H
VRcy6DW/SHB/2pe1TYOD2hv2xgvvIIPK20NKqcocJBLcp67iQoboaB4XBQkO
Uvmh5CiSTYZjZzXYNwQ5KPJwe39RLxksxs1ue031ohj895egFAUeC+xPWdnZ
iyw1fhbyHaFAsr+hu+ybXuRwM0LrYRQFbk5/OMVM6UWDOTe+lb+jgOis69IW
n14U/aVHWIFGBXH57VNu+3vRQmfa1sijVLAN/dZ2ityLnq14zdSIp0JW8uOU
q3U9yGTlezehViqs84rrCTrSg867aEfyitIg9PXFFn9ON3ogy1e73oIG1Xr6
vj+cu9GA0OHsrSE0MKoUkjEdZqPnpT5Ms1oaHNpJjaE6sdF8Qgzh+IcGR99E
eDR2d6EXQXFf3TUkgLV59TOWVRfillLK8pSATL0uitKTr6i96mbX1jIJkMj6
W7tnqhMJ54ve45+TgNfbzfzydTrRo8TubRu0JOF4pfGU0J0O1Bx+bsTbXRLu
W070N9e3I40vTHvHEkmYMnF5UjH6BfGc6jv5a0YSNuxq9rsk8gUdZ7b4KWhK
wc9/FYo81NpQ/LvwtvFLUhBp5X7ayPIzWpVY8sQqTwqClfXvW7i3ohDWU9ND
vVLQTGpmjEZ/QitI3vIdGtJQPkCRPrqpBW28UJ0p7y8NXS9K8hsxC21XPVSj
0SANN04E3Mwoakb6V8cKqEIy4MdDM00abUI76mT3sw1kYHd7aN2qre9R1CFx
v/jrMsAaueCq7cFA989fXmebIwPNb1nnDjbUIetBsgm1XQZiq2JftCUQaKe7
zB0nHjpE+4lkVc5XoDODd696bqDDD/Ozya4Dr5Bm3qCMtzYdmh5TN4lN5SMr
MUm7ZyZ0sBn8FEd3y0CWiqrxcJgOaSZaD5f+RqDmlcK2npZ0OHBcUdM32Qfr
hO5UCzOng8r3V/2HxJPwAIXF16tFhyNrvjWSefJxTcWcULoYHSYMc05viSjB
8Wo8JYW9MjC912+coVSFl3cBfSZdBsSOrQhlKtZg0eCSz6ePysBYRlTa3oU6
/FDxGs8wrwyMZhYk34pmYN78spawDGnQ+/ZWtHyoATtGZLma7ZGGYR+TS8y/
jXhm3+iwSbYUiJt/eU45+BE7FAo/OCUoBV6D4j3TCkzs+aWASeHy55eCQk8U
mbj1d7kQU0AKNK1tJWyUmDjWbJt+MJf9Z1esF9zIxE1rhW4gLsfWrBkr5XL8
DYuC3yulYEv3xRfnlJk4SjKXfI7LH0a/8TduYmLGnhzP9hVSwGtYObF5MxOb
FJv/Z8LlByqjnuFbmLhcbh3PsyVJ0P5pm75nNxP7D9ZXrp6XhOLG4LgaIybW
mXkmfG5aElztv2tvsGZiZeaK37VjkuAVEXvZ5gwT775k/LXllSS08oS8ye9i
4r6ENYbi3tz/LCYQ3avAwiyHxG/pIAmJKbEFaw6z8LDAeYvklZJgLfPH5rEH
Cy9t+7Co2CgBQrs2hJpEs3DlJt4vgbck4HIY87RsDgsnHzhYW7RPAkZMYTA3
n4UfZy2qdK6QgJn9XknUpyycXrd0W66BButvpV6XTGJhvoe9+QnxNNhs5VL3
NISFBWwbBmwcaSCaPpfX7cbC5vXl9pc0aUDSu+p7z4yF73tofZjnpwHV6edg
ohwL78gW3bSWqx+59fhNQw8TW+yyVItIokIsb4X9iA0TG9Rdy1rnRAXjE5cV
DMqa8bf99kTFDio8Wc4f6OBvxuQLbVGvFylQvypsdnD3R7xjr1aQciMFhM++
jus8/gFfCgQF9QQKqJN+/XvGuQmz5Ed95s9TYJvNgoPT6UYc1v2jLUWXAndP
t3iKGb/H1FPm2vtEKdA6YKnbIN2AJY187RzYZNA4ypx2iGRgvtOmyuR8Mliq
kkQnh97iG49S3KzDyDBY5rzzyKM6TLz7j+g6TwbaiK7vPlSLnfdMSVeakcFh
orfrdg+Bvx+y85jfTobyTNp8+swbzIiPakmhkCHQrWNTEXcfDAJl/QqXSfCU
NJZqZFmOu23L9m4bJQF16Jzrjluv8c3dOhFsJgk2NaqVrBMrwjdcGt/crCBB
8wTbutjxGQ535Vtlkk8CkePkZ2essrDtCobmbCYJaK3LJp/qEjE7VSX9SgoJ
NEpZDz4cC8Mcc7uVWUkkSJlgbItSI6M0v+7ma9z87WSr21ozoeggRdfqPfd+
Z7xW2R/vBGQx+bQ/4DkJrPwrZvjfZ6DatoJAgvu+YGCtm87dPLQcniSk8ZEE
jCHF5LLhQjRio+2Z1U8CCUctz+KFIhRFtlnT/pcEB7f4ZusxS5C7o0lnuBQZ
RqotQi0uliG3n6lu13XJ8LF4xiHgUwXy8+suO3SaDB4HdFQjFqpQzoFUvdog
MmgWWbRZ9LxBCy9TC9QryXDSqPRsnjuBGqU2SD6Y4vpne/WnnN01SKv21gX6
VgqsprsnS9TVoJm9uqMCzhSIPd06Ob2uFkmTS/cFZlBAb+vw9HN6LeJLatra
zqaAkoXeTtpMDco3TUk5wPXDgZbXd5Tja1Cnwu4xtcNUOMWwu5IiUIM+P0zm
XwimwsvtVSL1ZgRaELBJk66igr9JQvP+tjdIvkSFsXGMCoOsTx2RrVXIZM1c
eKkkDVr3zgbqJFegGsvPN/wMaTAib+T6dE8ZygaTx+gCDW4aXHgZ97oEiW80
cG4Ip0GMyp+TApLFyLew9ed4IQ2S3Ju8Vl4sRHeI+rU8H2nQ2b40lh2Ti0qX
rYem+2hwcXNs0lxVOlodMURjT3L3laodPiIUjwqQ4fOBeRp4nM0547fsj8Lt
L3ibc/3W1NikPXPWBXeznNvsZ2nwqsHyY0JaFI56I+cVNkoDb3LfaKdNIt71
xKnZ5gsN7hWsXlTenonf8aor0KpocP5xuYjMzVwsdmmtOU6kgUx1eTD8eY5P
bD8QcugaDaAoSlHb8gWu+hn8vucAlzUXkg6WvMQi5/WfRUjTIDUjWJyaWYRp
G3f1+XLn9a+5yosSiWKMArYufq2mwtzJx+ZxXCY3qts1RVFB54Uqo+BJEU7I
cUh0PEOFayhz67u6l9hk4x/9Ii0qrKy89yzC5wVmZwXVpIpQ4UeT3Pyq0nw8
xht8b/EHBcadLJUC2Hn4rRq4XWFS4Ljh2ZxPEU/wd9ULK3xLKWCg9JFFHUrD
uRHTBleeUGCd/LnSPOVHmMzrEuXO1RP+obClhf8iMNMm30/xAQXeDm58nnbr
Ju7PZy2VxFBA/vU6ql2HOdJv8Jxb5OYTyu0/KZJuI82Orl6cSIENujG3c45H
IlEh0v3STArAjuDzcaUPkCLpk0V0IVd/7ql70kiJaNk/VGCymgITHs3Cj4pS
UPt95UdXm7n6JbNHvtQgHUWNB5UP91FAd5+U4sxoBtIhAg1/zVGASA0wfbI+
C3Vd1w9c5vZvGqrj9rA4Czl3HYnxVqaCmuybnKyOLBSwtvpOjx4VWmvCVM3C
stD3zx0qz49QYem1pbIOMxP9MPhqftGFCjfaVYO6ijOQ3u3UWrdbVJhP0vkq
dDod/XPyveHgPSrc7x1RJJJS0f8AaVhsuw==
        "]]}}, 
     {RGBColor[0., 0.6980392336845398, 1.], PointSize[0.02], 
      PointBox[{1.4000000000000004`, -6.25}], 
      ArrowBox[{{5.873465577111402, 0.0339358406179659}, {5.890526842870782, 
       0.030871393445267403`}}]}, {{}, {}, 
      {RGBColor[0., 0.572549045085907, 1.], LineBox[CompressedData["
1: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
7YmkDPQ/iShClQ==
        "]]}}, 
     {RGBColor[0., 0.572549045085907, 1.], PointSize[0.02], 
      PointBox[{1.6500000000000004`, -7.649999999999999}], 
      ArrowBox[{{5.859003385376969, 0.047327442008776595`}, {
       5.875682349654549, 0.045079047256478814`}}]}, {{}, {}, 
      {RGBColor[0., 0.03529411926865578, 1.], LineBox[CompressedData["
1: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
2eh/hpiqkg==
        "]]}}, 
     {RGBColor[0., 0.03529411926865578, 1.], PointSize[0.02], 
      PointBox[{1.8499999999999996`, -9.}], 
      ArrowBox[{{5.704623289522802, 0.061044588551799436`}, {
       5.715985490816976, 0.061642337925678733`}}]}},
    AspectRatio->1.1125,
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->{400, 400},
    PlotRange->{{-10., 10.}, {-12.25, 10.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
pSqzE8ooRT1FvdS5kZogfspTX3hFmja8zD6ifjnt2/8UbSq7gn7bczRbHx+t
3eWnmeXH0dwD/0MriqdTWcYyjzLI9Re8u5Muv1rRIR1sfDPtaxr4yyY6e0oj
xY9tpmE31tKES6oo4/pq6pNRz1RpooTZ6+mllek05qtRtGDZtfT1VyfRO9+e
R4+X9KHbt1xFF26/if7xx63Ud9N9dN7W/nTO7lvp9LKbqHvdtfx+M12/8U56
OP9+emdjEq3YlUQbdj9KtcWPBD0St2bTuVRYlEZZG76njM1sQZga3ZcZWiWy
BclmWamp4jZgLDVl8DYIIR3I1I6ahilqLjLtU7iPLfYvjJXFHI5PNtYMLqU8
Ewhu5IjRxs3FNuNDZYP3SGOdpv5srBIsElujbi5xzHKuL6krdSx+so11wBpE
UYuvNIzBt7iFE9PWPmClA9kk+NXKiGwFKJNdLWdGQvHuNcbAIHGI/ztLrTDM
BUcMRuWpIdqgxFgcw1qAIcgAwuuy7Ii1NdOJPYQsYEbXC43FACuQLUCSjn9v
b68MEeSenZGU0iQ3S0doaiQbauDPJCPa0vC5U7X0T2Q+/rjGWBNEP3hswRrV
r41mQjvKbziDVtedSV/sOZOyJ91Ck64fRBPPf4TS/jmcBjwylXpl/Iw55HMQ
KPX5+Gta+dnF9Nm6Uygn/wL6aH4i5RYdTUtqD6Eva4hWVhMtqT6EcnlbUMU2
qspPX1bF8daNvjpwAq2s7MnvF9Hqyuvo68rb6IcDD9LPBx7XQ1gYytpZO4Mq
axdoZ01Vz/Tp3NeppOqYrDU5VFX1Du3a/zj9XnYNbSs9jXaXHKZ9ue07fbR+
dxRNrexNM2ofpOXNC3Worj7aQOrUKUZhhyzTmYCiLUaYgSr4PVu3mUwCghI6
rpF8T+fTOfMzqd+yX+iwBQ30QM7nlLukP+1dcAZN+vI66l15LZ07eyyddEER
xfaoprbx9XRIDG7X9XVspiPpkOhm8vN2dPx+uvzULfTC6Wvpyz7fUN4V+ZT5
zDxKLZhOCQ2j9APY8OAyPNxMqwQewYvHGOMRx3gY+G6zInFxjWFV0neGZWm/
ypg9bkHjHmXha4jl9weU34HpjI3GVsE1hH2SlWPhCp7RlzXyJh2zebBCjuRY
1p67FtmHp5Csfw/XDcPVmEF6ijUNiHq+vDswnADuICOIiW/ew2hx/8KVe7WH
Iac5iy3uP78yxPEe9oG5DTAxMC/lZULBj1eYaGXIOJ126yg0Q1RyNPtsnc8z
0wiKd3uPUSktr6GHdsRrVsiKO/gDN+7U2yG0vOkN+q12MP2nqRPlNPtovpJH
XXSgr3M70Oq89nRP9nDac9yhtL9rB/r5wh7UYfoBavdBDR3x9k7qNG0vdXyv
jOkFRpxMt/30EL1QEU1juIQXatvQC0Xd6ekmH6U0RNDwuggaU+enYfz52QY/
ja730+uNUfRJwym0qOEYym3sQouaDqVFzeDiIfzuo0XszeY2RtLS8o60rDSW
1uxpRyv3RNLPu5AgPoQ2sJ+FISsMEM0v9VPO3jY0ubwzTag8iSbVXE1TG4bT
NPU+lagSC5MYI5i3zCd14jukHl5q/ge0dhoaDHnCxO/4bg1/1/5KfdcIE+IY
OqRHLd32dCZ9nXc63VA9kI6oeJDeuecTOr9jHUV2Yahf3EiHJDZTzCv76fTZ
P9E/Fn1JF+bmUcKiPKbRd9Tmwzpq/04DncmdEHuPot6n11FsTD2lJWdT5aT7
qPkaduWPLaea8jqaygb0WPUIu8JLvUfD4nHOsD9/9Cf5rpDj2vMYHSM2iOn2
6wf9NF7LLBgSSNBO/Jk76AN34WS/vkxEQEg5yCR0zG5S7d4gNeMXOzhpsKnV
9GG82GAm3kITf7gxBNnedRKdBM+qCfedDGVvnKroP2eYdV58tkgMRU9St+h5
dBRYZFstrtWDXPhrb3edyrar6wKl35lH4W7AkMeeed8hNX7asSZFNz+ng7U7
8jOy2pgtgSAH7/dz40yab4Kc1m9D72jsFmagYZBJvDlEOjIdwr2li7mqy0AW
fPo8/i0zUv9zHO0efi3lJ95CeQnJtOScB2jZ6fdT7gmP0hfH3E958ffrwz7u
NpQWxD1G78WPoHEnP0cvdX+dnj55Ir3SI41ST59AQ06ZSCNPGk0Tjn+EcuP/
h1Z1P5++PPMSmnrVffTogIl05VN5upx206up0xRD4cv/nUcnjd/YRjO5Pb00
7BOa+cojlLL8IrpnT5zefUTT+bSPmYQ80iD1KLw9v/b22tNINcYkvuyCQch1
YAVpeUgH/vi3CIk77drtgedSuE/eiDDP2Oukj3KfSaYfxPHdY1T3yMMcjjxP
quc07e/UlNRS12MVHXeKwTKsGkT1lCc0attZ9hIMW7w1bofxNp5dyvHNdNXC
2fTMpuv06e78Ipu6LCinY7Ma6KpHmT5PKjr+/EaKPrSeXk0fRlVTBlHzsazR
hzNLd9WBnXS4GsjRxmdkSWKQAar+egYMl8vUHnnGfglT4QE2nmwOk+9Q8xGr
FV35sXh5bVqMWIO5MFzIYwgV9D5F5cZrLth1hEvTAPpxew2o+i47ebvlBtE/
p2sby5LCiYo+PNZMi8WC6LB1yPANts9WQqbPS1AUNpgyMOKFRAVGwWQN5TZe
tIUEH6ZRIVmBPyQoOtqKBF03IjAk+zBdCn4l3nGry6MDg29+Ly+TaXyhzYZE
BgK0a4crOi3ZJDPkLgP31hZneQ1dRovVXOg8PfMKCcW81fWUN/t3ypv4I+W9
uJzynllMuUMWUM4D8ykn+SPKueUDXUb2v6ZR1uVTKatnOqX/K4dG9VtEqVct
oZR+n9OjV3xKA66cSQ8kvE/3Xfg+9euzlB45dyI9dmYmPXb6W/TaiU/rMnJP
uJm+Oulq+ua0S+mLc/9FCy9KpMmJg2nM3f+mhx7PphtfZHdtwjY6+r0KzeOO
79XQCe/uoYsn/0y3TviIUkal63KWd7mbUru/Q/86YxkNPzmNvu7Sl4qO605T
/zmAkp6aTbHvV/jN2tTUd04ezRs+nBZeM4cmdTSPCduWa72rbtqFLlSLaLa6
jjLUiZTOdP1MHa0XnMUKTUh2Yvl4rM4k/JAHBOFRAe7zdkIfDiRL1zeqDXKf
Hv4CDz5znzOUSGVVp2rdKGO52p/bk/Yv7U1rnk2jWy/cSrGdmqjH6c106lm6
ClFaA7oRRVtFuEqvTE0c/hCdxGQ6pYF8bzdRxKQG8n/YSB2n1+hTH5G2g/x3
NlPXixootmstdT92Oz1233u0ZUgGNZ9QpJ9BV/hRkX4gMh6TjQciF6gtPpeh
2zgqWt+V1L4s+RrCcDeHiNEcSGX97jmusOJNTLeGOOPX4k983UVbTd4TGlFW
q9qFmjhlxh6OZWkZ9qwKusEMMWLaGvFr460iu0fCmmMQDokWzDBbqbJlIBxh
Iyw2Ev5Y3BMDcF9NLKIPd47QN9wNtgNwuOkOUhC4VbOduekDbnA/M1fFm/0u
yzOGTCDDbHZMsdQdZtc8wP2Y7l0duF+z6IC9TbtTYL4K8v/33936TeMyOzj8
soo+XUC0VpXyCVn0+9gsWj86i1anZtHSYTMo58kcmj00h6Y8lEOTBvL77Vk0
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
eke+xHNyJGoA5dk2j1lsW3cpia6WOcvL0aSqo1MjB9EJWVoOewY5CjmN+T07
PZBI5LzqJf7kE0JMWS7U0agl2nb+JV9izw4kxnSYIxGggcQNcyPzu8bYe9/J
l3hKJyU+OVTS1VJTCtOMyEhdGKtzEtk6LIHYC/uTVVKErcPnzNOy0sX8PKcD
W5alRTCx4R8hqOMsEPEzaX1VDnlkOSTsQJnWnRayiNn8IAfXZX1eV2qjV9Mi
sjYi8FXyIxkRq8rTEsoPJRLXr6Z93idf4l0+/eFInImXldwjw7oOHsvKUHN1
dlijAyrI4vnYDG3m+p9Ax8DzUndP5FJ3+9hGdU9kMcf5m3Ocz9ggtFgTIBKh
nq6b3puv3hz/U8u6RL0K997D/PzaUgrPo51XS4NmWMdSfzMrlNrFtRqQmC9s
yjYFJdJNFZ0teLjMJ3U3ra2tZsmSJa6phx56yP2NX3bt2mVuvvlm9x3+b2lp
yVy5FYhFfym26N9hoz+u1itsu6anKVAJjR9vnn76aff5qaeeMjfeeGM5cXN9
gfnrmYk4vCDKfndejpQzzjjDbNu2zX3eunWrGThwYDkpOnKAJdjUfh6V03pV
VZU5cuSI+3z48GFTXV1drvXVJ6ukW7L2H3Lyv/t2//SnP8UNyPK+LuaGG244
GVs+73+C57FSrlevXv7wLs7rEydOdCjA/x2g4P9nLcZf8ifzjv8F3MyUSw==
\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6033868122640247`*^9, 3.603386829969145*^9}, 
   3.6033869950326777`*^9, {3.603387535622012*^9, 3.6033875615106773`*^9}, 
   3.603388562297612*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1004, 998},
WindowMargins->{{396, Automatic}, {-4, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/stefano/Documents/Projects/Homeostat/Simulator/\
Python-port/Homeo/Research-notes/Images/print.pdf"},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 172, 4, 87, "Title"],
Cell[754, 28, 494, 10, 71, "Text"],
Cell[CellGroupData[{
Cell[1273, 42, 130, 3, 74, "Section"],
Cell[1406, 47, 288, 4, 30, "Input"],
Cell[1697, 53, 309, 6, 51, "Text"],
Cell[2009, 61, 355, 11, 52, "Input"],
Cell[2367, 74, 127, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[2519, 81, 2171, 58, 149, "Input"],
Cell[4693, 141, 3170, 59, 276, "Output"]
}, Open  ]],
Cell[7878, 203, 172, 4, 31, "Text"],
Cell[8053, 209, 407, 12, 49, "Input"],
Cell[8463, 223, 125, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[8613, 230, 2265, 59, 149, "Input"],
Cell[10881, 291, 3173, 59, 274, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14103, 356, 125, 3, 74, "Section"],
Cell[14231, 361, 1134, 24, 53, "Input"],
Cell[CellGroupData[{
Cell[15390, 389, 757, 17, 30, "Input"],
Cell[16150, 408, 7885, 138, 217, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24072, 551, 832, 19, 50, "Input"],
Cell[24907, 572, 5611, 101, 217, "Output"]
}, Open  ]],
Cell[30533, 676, 92, 1, 30, "Input"],
Cell[30628, 679, 92, 1, 30, "Input"],
Cell[30723, 682, 92, 1, 30, "Input"],
Cell[30818, 685, 975, 26, 57, "Input"],
Cell[31796, 713, 627, 17, 53, "Input"],
Cell[CellGroupData[{
Cell[32448, 734, 3350, 82, 201, "Input"],
Cell[35801, 818, 3650, 68, 274, "Output"]
}, Open  ]],
Cell[39466, 889, 120, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[39611, 895, 2830, 74, 193, "Input"],
Cell[42444, 971, 3704, 70, 274, "Output"]
}, Open  ]],
Cell[46163, 1044, 92, 1, 30, "Input"],
Cell[46258, 1047, 945, 21, 153, "Text"],
Cell[47206, 1070, 1096, 27, 52, "Input"],
Cell[48305, 1099, 16, 0, 31, "Text"],
Cell[48324, 1101, 253, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[48602, 1110, 1896, 45, 126, "Input"],
Cell[50501, 1157, 3121, 57, 274, "Output"]
}, Open  ]],
Cell[53637, 1217, 16, 0, 31, "Text"],
Cell[53656, 1219, 1467, 30, 131, "Text"],
Cell[CellGroupData[{
Cell[55148, 1253, 989, 23, 88, "Input"],
Cell[56140, 1278, 31765, 526, 251, "Output"]
}, Open  ]],
Cell[87920, 1807, 325, 10, 31, "Text"],
Cell[88248, 1819, 209, 4, 30, "Input"],
Cell[88460, 1825, 241, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[88726, 1834, 1383, 36, 92, "Input"],
Cell[90112, 1872, 2563, 50, 266, "Output"]
}, Open  ]],
Cell[92690, 1925, 162, 2, 50, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92889, 1932, 133, 3, 74, "Section"],
Cell[93025, 1937, 775, 19, 71, "Text"],
Cell[93803, 1958, 69, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[93897, 1963, 2058, 52, 88, "Input"],
Cell[95958, 2017, 2875, 53, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98870, 2075, 732, 23, 30, "Input"],
Cell[99605, 2100, 9846, 270, 394, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109488, 2375, 2886, 71, 208, "Input"],
Cell[112377, 2448, 3108, 57, 436, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115522, 2510, 644, 17, 30, "Input"],
Cell[116169, 2529, 616, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116822, 2549, 322, 6, 30, "Input"],
Cell[117147, 2557, 543, 11, 41, "Message"],
Cell[117693, 2570, 354, 8, 29, "Output"]
}, Open  ]],
Cell[118062, 2581, 130, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[118217, 2587, 2246, 67, 126, "Input"],
Cell[120466, 2656, 188603, 3230, 899, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
